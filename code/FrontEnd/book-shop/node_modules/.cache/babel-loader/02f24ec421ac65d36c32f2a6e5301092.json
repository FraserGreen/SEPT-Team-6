{"ast":null,"code":"var _jsxFileName = \"/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/CreateListing/CreateListing.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Col, Container, Row, Table, Button, FormLabel } from 'react-bootstrap';\nimport { NavLink } from 'react-router-dom';\nimport { Form } from 'react-bootstrap';\nimport axios from 'axios';\nimport { useSessionUser } from '../../Hooks/useSessionUser';\nimport \"./CreateListing.css\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CreateListing = () => {\n  _s();\n\n  const [dataLoaded, setDataLoaded] = useState(false);\n  const [books, setBooks] = useState();\n  const {\n    sessionUser\n  } = useSessionUser();\n  const [selectedBook, setSelectedBook] = useState();\n  const [type, setSelectedType] = useState();\n  const [price, setPrice] = useState();\n  const [show, setShow] = useState(false);\n  const [message, setMessage] = useState({\n    success: false,\n    failure: false,\n    message: \"\"\n  });\n\n  const populateData = async () => {\n    try {\n      const responseGetData = await axios.get('http://localhost:8081/api/books/getallbooks');\n      return responseGetData.data;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"Session user\", sessionUser);\n\n    async function fetchData() {\n      if (dataLoaded === false) {\n        const booksData = await populateData();\n        console.log(\"BOO\", booksData);\n        setBooks(booksData);\n        setDataLoaded(true);\n      }\n    }\n\n    fetchData();\n  }, [dataLoaded]);\n\n  const submit = async () => {\n    if (isNaN(price)) {\n      setShow(true);\n      setMessage({\n        success: false,\n        failure: true,\n        message: \"Incorrect field\"\n      });\n      return;\n    } else {\n      try {} catch (error) {}\n    }\n  };\n\n  if (books) {\n    const booksList = books.map(book => {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: book.id,\n        children: book.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 17\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Form, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                as: \"legend\",\n                children: \"Book\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n                className: \"me-sm-2\",\n                htmlFor: \"inlineFormCustomSelect\",\n                visuallyHidden: true,\n                children: \"Select Book\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                as: \"select\",\n                name: \"book\",\n                value: selectedBook,\n                onChange: e => {\n                  setSelectedBook(e.target.value);\n                  console.log(e.target.value);\n                },\n                children: booksList\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 25\n            }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n              children: /*#__PURE__*/_jsxDEV(Form.Group, {\n                as: Row,\n                className: \"mb-3\",\n                children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                  as: \"legend\",\n                  children: \"Quality\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Col, {\n                  children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n                    type: \"radio\",\n                    label: \"New\",\n                    name: \"formHorizontalRadios\",\n                    id: \"NewSelected\",\n                    onClick: e => {\n                      setSelectedType(\"new\");\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 37\n                  }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                    type: \"radio\",\n                    label: \"Used\",\n                    name: \"formHorizontalRadios\",\n                    id: \"OldSelected\",\n                    onClick: e => {\n                      setSelectedType(\"used\");\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 37\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                as: \"legend\",\n                children: \"Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n                placeholder: \"14.99\",\n                name: \"title\",\n                value: price,\n                onChange: e => {\n                  setPrice(e.target.value);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(Container, {\n          children: /*#__PURE__*/_jsxDEV(Row, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"backSubmit\",\n              children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"buttonPadding\",\n                children: /*#__PURE__*/_jsxDEV(NavLink, {\n                  to: \"/my-listings\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"danger\",\n                    children: \"Back\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"buttonPadding\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  variant: \"success\",\n                  onClick: submit,\n                  children: \"Submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 181,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(CreateListing, \"/32d1MnwF7YM2DwiHUVYs6qt5t0=\", false, function () {\n  return [useSessionUser];\n});\n\n_c = CreateListing;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateListing\");","map":{"version":3,"sources":["/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/CreateListing/CreateListing.js"],"names":["React","useState","useEffect","Col","Container","Row","Table","Button","FormLabel","NavLink","Form","axios","useSessionUser","CreateListing","dataLoaded","setDataLoaded","books","setBooks","sessionUser","selectedBook","setSelectedBook","type","setSelectedType","price","setPrice","show","setShow","message","setMessage","success","failure","populateData","responseGetData","get","data","error","console","log","fetchData","booksData","submit","isNaN","booksList","map","book","id","title","e","target","value"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useState, useEffect} from 'react'\nimport { Col, Container, Row, Table, Button, FormLabel} from 'react-bootstrap'\nimport { NavLink } from 'react-router-dom'\nimport { Form } from 'react-bootstrap'\nimport axios from 'axios'\nimport { useSessionUser } from '../../Hooks/useSessionUser'\nimport \"./CreateListing.css\"\n\nexport const CreateListing = () => {\n\n    const[dataLoaded, setDataLoaded] = useState(false)\n    const [books, setBooks] = useState()\n    const {sessionUser} = useSessionUser();\n\n    const [selectedBook, setSelectedBook] = useState();\n    const [type, setSelectedType] = useState();\n    const [price, setPrice] = useState();\n\n    const [show, setShow] = useState(false);\n    const [message, setMessage] = useState({\n        success: false,\n        failure: false,\n        message: \"\"\n    })\n\n    const populateData = async () => \n    {\n        try \n        {\n            const responseGetData = await axios.get('http://localhost:8081/api/books/getallbooks');\n            return responseGetData.data;\n          \n        }   \n        catch(error)\n        {\n          console.log(error);\n        }\n    }\n    \n    useEffect(() => {\n        console.log(\"Session user\", sessionUser)\n        async function fetchData(){\n            if(dataLoaded === false){\n                const booksData = await populateData()\n                console.log(\"BOO\", booksData)\n                setBooks(booksData)\n                setDataLoaded(true)\n            }\n        }\n        fetchData()\n       \n    }, [dataLoaded])\n    \n    const submit = async () =>\n    {\n        if (isNaN(price))\n        {\n            setShow(true);\n            setMessage({\n                success:false,\n                failure:true,\n                message:\"Incorrect field\"\n            });\n            return;\n        }\n        else\n        {\n            try\n            {\n\n            }\n            \n            catch(error)\n            {\n\n            }\n        }\n    }\n    \n    if (books)\n    {\n        const booksList = books.map(book => {\n            return (\n                <option value = {book.id}>{book.title}</option>\n            )\n        })\n        return (\n            <div>\n                <div>\n                    <Container>\n                        <Form>\n                        <Form.Group>\n                                <Form.Label as='legend'>Book</Form.Label>\n        \n                                <Form.Label\n                                    className=\"me-sm-2\"\n                                    htmlFor=\"inlineFormCustomSelect\"\n                                    visuallyHidden\n                                    >\n                                    Select Book\n                                </Form.Label>\n                                <Form.Control as =\"select\" name='book' value={selectedBook} onChange={e=> {\n                                    setSelectedBook(e.target.value);\n                                    console.log(e.target.value);\n                                }}>\n                                    {booksList}\n                                </Form.Control>\n                                <br></br>\n        \n                            </Form.Group>\n\n                            {/* <Form.Group className=\"mb-3\" controlId='formBasicCheckbox'>\n                                <Form.Label> Quality </Form.Label>\n                                <Form.Check type='checkbox' label='New'/>\n\n                            </Form.Group> */}\n\n                            <fieldset>\n                                <Form.Group as={Row} className=\"mb-3\">\n                                <Form.Label as=\"legend\">\n                                    Quality\n                                </Form.Label>\n                                <Col >\n                                    <Form.Check\n                                    type=\"radio\"\n                                    label=\"New\"\n                                    name=\"formHorizontalRadios\"\n                                    id=\"NewSelected\"\n                                    onClick={e => {setSelectedType(\"new\")}}\n                                    />\n                                    <Form.Check\n                                    type=\"radio\"\n                                    label=\"Used\"\n                                    name=\"formHorizontalRadios\"\n                                    id=\"OldSelected\"\n                                    onClick={e => {setSelectedType(\"used\")}}\n                                    />\n                                </Col>\n                                </Form.Group>\n                            </fieldset>\n\n\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label as='legend'>Price</Form.Label>\n                                <Form.Control placeholder=\"14.99\" name = 'title' value= {price} onChange={e=> {setPrice(e.target.value);}}/>\n                            </Form.Group>\n                        </Form>\n                    </Container>\n                </div>\n\n    \n                <div>\n                    <Container>\n                        <Row>\n                            <div className='backSubmit'>\n                                <div className='buttonPadding'>\n                                    <NavLink to='/my-listings'>\n                                        <Button variant='danger'>\n                                            Back\n                                        </Button>\n                                    </NavLink>\n\n                                </div>\n                                <div className='buttonPadding'>\n                                    <Button variant='success'onClick={submit}>\n                                        Submit\n                                    </Button>\n                                </div>\n                            </div>\n                        </Row>\n                    </Container>\n                </div>\n            </div>\n        )\n    }\n    else\n\n    {\n        return (\n            <div>\n\n            </div>\n        )\n    }\n    \n}\n"]},"metadata":{},"sourceType":"module"}