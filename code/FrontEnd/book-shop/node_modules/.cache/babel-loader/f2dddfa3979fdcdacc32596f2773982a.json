{"ast":null,"code":"var _jsxFileName = \"/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Book/BookListing.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router';\nimport { useEffect } from 'react';\nimport { Container, Table } from 'react-bootstrap';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BookListing = ({\n  bookID\n}) => {\n  _s();\n\n  const [tableData, setTableData] = useState([]);\n  const [book, setBook] = useState({\n    id: 0\n  });\n  const [dataLoaded, setDataLoaded] = useState(false);\n  const [listings, setListings] = useState();\n\n  const populateData = async request => {\n    try {\n      const config = {\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*'\n        },\n        withCredential: true\n      };\n\n      if (request === \"getBook\") {\n        const bookRequest = {\n          id: parseInt(bookID)\n        };\n        console.log(\"Sending book request\");\n        const response = await axios.post(\"http://localhost:8081/api/books/getbook\", bookRequest, config);\n        return response.data;\n      } else if (request === \"getListings\") {\n        const listingRequest = {\n          bookId: parseInt(bookID)\n        };\n        console.log(\"Sending listings request\");\n        const response = await axios.post(\"http://localhost:8082/api/listings/getlistingsbybookid\", listingRequest, config);\n        console.log(\"Got listings\", response.data);\n        return response.data;\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      if (dataLoaded === false) {\n        const bookData = await populateData(\"getBook\");\n        const listingsData = await populateData(\"getListings\");\n\n        if (listingsData && bookData) {\n          console.log(\"LISTINSGSOS\", listingsData);\n\n          if (!listingsData.results && !bookData.results) {\n            let data = [];\n\n            for (const listing of listingsData) {\n              let listingItem = {\n                id: listing.id,\n                type: listing.type,\n                price: listing.price,\n                sold: listing.sold\n              };\n\n              for (const book of bookData) {\n                if (listing.bookId === book.id) {\n                  listingItem = { ...listingItem,\n                    title: book.title,\n                    author: book.author\n                  };\n                  data.push(listingItem);\n                }\n              }\n            }\n\n            console.log(\"Combined\", data);\n            setTableData(data);\n            setDataLoaded(true);\n          }\n        } else {\n          setBook();\n          setListings();\n          setDataLoaded(true);\n        }\n      }\n    }\n\n    fetchData();\n  }, [dataLoaded, tableData, listings, book]);\n\n  if (tableDataUsed || tableDataNew) {\n    const displayTableDataUsed = tableDataUsed.map(listItem => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: listItem.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: listItem.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: listItem.author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: listItem.type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: listItem.price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 21\n        }, this), listItem.sold ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Sold\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 26\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Not sold\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 21\n      }, this);\n    });\n    const displayTableDataNew = tableDataNew.map(listItem => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: listItem.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 140,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: listItem.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: listItem.author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: listItem.type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: listItem.price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), listItem.sold ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Sold\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 26\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Not sold\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 26\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 139,\n        columnNumber: 21\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          striped: true,\n          bordered: true,\n          hover: true,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Listing ID \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Author\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {\n            children: displayTableData\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          striped: true,\n          bordered: true,\n          hover: true,\n          children: [/*#__PURE__*/_jsxDEV(\"thead\", {\n            children: /*#__PURE__*/_jsxDEV(\"tr\", {\n              children: [/*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Listing ID \"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Title\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Author\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Price\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 25\n              }, this), /*#__PURE__*/_jsxDEV(\"th\", {\n                children: \"Status\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 25\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 195,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"tbody\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 21\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 191,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 190,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(BookListing, \"dlz0ie/MlrkDMxvXces0XtrwymA=\");\n\n_c = BookListing;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookListing\");","map":{"version":3,"sources":["/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Book/BookListing.js"],"names":["React","useState","axios","useParams","useEffect","Container","Table","BookListing","bookID","tableData","setTableData","book","setBook","id","dataLoaded","setDataLoaded","listings","setListings","populateData","request","config","headers","Accept","withCredential","bookRequest","parseInt","console","log","response","post","data","listingRequest","bookId","error","fetchData","bookData","listingsData","results","listing","listingItem","type","price","sold","title","author","push","tableDataUsed","tableDataNew","displayTableDataUsed","map","listItem","displayTableDataNew","displayTableData"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router';\nimport { useEffect } from 'react';\nimport { Container, Table } from 'react-bootstrap';\n\nexport const BookListing = ({bookID}) => {\n    const [tableData, setTableData] = useState([]);\n    const [book, setBook] = useState({id: 0});\n    const [dataLoaded, setDataLoaded] = useState(false);\n    const [listings, setListings] = useState();\n\n    const populateData = async (request) =>\n    {\n        try\n        {\n            const config = \n            {\n              headers: {\n                  Accept: 'application/json',\n                  'Content-Type': 'application/json',\n                  'Access-Control-Allow-Origin': '*',\n              },\n              withCredential: true\n            }\n\n            if (request === \"getBook\")\n            {\n                const bookRequest = {\n                    id:parseInt(bookID)\n                }\n    \n                console.log(\"Sending book request\")\n                const response = await axios.post(\"http://localhost:8081/api/books/getbook\", bookRequest, config);\n    \n                return response.data;\n            }\n\n            else if (request === \"getListings\")\n            {\n                const listingRequest = {\n                    bookId:parseInt(bookID)\n                }\n                    \n                console.log(\"Sending listings request\")\n                const response = await axios.post(\"http://localhost:8082/api/listings/getlistingsbybookid\", listingRequest, config);\n                console.log(\"Got listings\", response.data)\n                return response.data;\n            }\n\n        }  catch(error)\n        {\n            console.log(error)\n        }\n    }\n\n    useEffect(() => {\n        async function fetchData(){\n            if (dataLoaded === false) {\n                const bookData = await populateData(\"getBook\");\n                const listingsData = await populateData(\"getListings\");\n\n                if (listingsData && bookData)\n                {\n                    console.log(\"LISTINSGSOS\", listingsData)\n                    if (!listingsData.results && !bookData.results)\n                    {\n                        let data = []\n\n                        for(const listing of listingsData){\n                            let listingItem = {\n                                id:listing.id,\n                                type:listing.type,\n                                price:listing.price,\n                                sold:listing.sold\n                                \n                            }\n                            for(const book of bookData){\n                                if(listing.bookId === book.id){\n                                    listingItem = {\n                                        ...listingItem, \n                                        title:book.title,\n                                        author:book.author\n                                    }\n                                    data.push(listingItem)\n                                }\n                            }\n                        }\n\n                        console.log(\"Combined\", data);\n                        setTableData(data);  \n                        setDataLoaded(true)\n                    } \n                }\n                else\n                {\n                    setBook()\n                    setListings()\n                    setDataLoaded(true)\n                }\n            }\n        }\n        fetchData();\n\n    }, [dataLoaded, tableData, listings, book])\n    if (tableDataUsed || tableDataNew)\n    {\n        const displayTableDataUsed = tableDataUsed.map(listItem => \n            {\n                return (\n                    \n                    <tr>\n                    <td>{listItem.id}</td>\n                    <td>{listItem.title}</td>\n                    <td>{listItem.author}</td>\n                    <td>{listItem.type}</td>\n                    <td>{listItem.price}</td>\n                    {\n                        listItem.sold\n                        ?\n                        (<div>\n                            Sold\n                        </div>)\n                        :\n                        (<div>\n                            Not sold\n                        </div>\n                        )\n                    }\n                    </tr>\n                )\n            }\n        )\n        const displayTableDataNew = tableDataNew.map(listItem => \n            {\n                return (\n                    \n                    <tr>\n                    <td>{listItem.id}</td>\n                    <td>{listItem.title}</td>\n                    <td>{listItem.author}</td>\n                    <td>{listItem.type}</td>\n                    <td>{listItem.price}</td>\n                    {\n                        listItem.sold\n                        ?\n                        (<div>\n                            Sold\n                        </div>)\n                        :\n                        (<div>\n                            Not sold\n                        </div>\n                        )\n                    }\n                    </tr>\n                )\n            })\n        \n        return (\n            <div>\n                <Container>\n                    \n                    <Table striped bordered hover>\n                        <thead>\n                            <tr>\n                            <th>Listing ID </th>\n                            <th>Title</th>\n                            <th>Author</th>\n                            <th>Type</th>\n                            <th>Price</th>\n                            <th>Status</th>\n\n                \n                            </tr>\n                        </thead>\n                        <tbody>\n                            {displayTableData}\n                        </tbody>\n\n                    </Table>\n                </Container>\n            </div>\n        )\n    }\n    else\n    {\n        return (\n            <div>\n            <Container>\n                \n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                        <th>Listing ID </th>\n                        <th>Title</th>\n                        <th>Author</th>\n                        <th>Type</th>\n                        <th>Price</th>\n                        <th>Status</th>\n\n            \n                        </tr>\n                    </thead>\n                    <tbody>\n\n                    </tbody>\n\n                </Table>\n            </Container>\n        </div>\n        )\n    }\n\n}\n\n"]},"metadata":{},"sourceType":"module"}