{"ast":null,"code":"var _jsxFileName = \"/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Login/Login.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React from 'react';\nimport { Container, Form, Button } from 'react-bootstrap';\nimport { useForm } from '../../Hooks/useForm';\nimport { useState } from 'react';\nimport { Alert } from 'react-bootstrap';\nimport { SESSION_USER } from '../constants';\nimport jwt_decode from 'jwt-decode';\nimport { useSessionUser } from '../../Hooks/useSessionUser';\nimport { useHistory } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport const Login = () => {\n  _s();\n\n  const history = useHistory();\n  const {\n    loginSessionUser\n  } = useSessionUser();\n  const {\n    userType\n  } = useSessionUser();\n  const {\n    fields,\n    setFields,\n    handleInputChange\n  } = useForm({});\n  const [show, setShow] = useState(false);\n  const [message, setMessage] = useState({\n    success: false,\n    failure: false,\n    message: \"\"\n  });\n\n  const submit = async event => {\n    event.preventDefault();\n    const data = {\n      username: String(fields.username),\n      password: String(fields.password)\n    };\n    console.log(data);\n\n    try {\n      const config = {\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*'\n        },\n        withCredential: true\n      };\n      const response = await axios.post('http://localhost:8080/api/users/login', data, config); // console.log(response.data.token);\n\n      if (response.status === 200) {\n        setShow(true);\n        setMessage({\n          success: true,\n          failure: false,\n          message: \"Login Successful\"\n        });\n        const decoded = jwt_decode(response.data.token);\n        loginSessionUser(JSON.stringify(decoded));\n        loginSessionUser(decoded);\n        console.log(JSON.stringify(decoded));\n        localStorage.setItem(SESSION_USER, JSON.stringify(decoded));\n        console.log(JSON.parse(localStorage.getItem(SESSION_USER)));\n        setTimeout(() => {\n          history.push(\"/\");\n        }, 3000);\n      }\n    } catch (error) {\n      console.log(error);\n      setShow(true);\n      setMessage({\n        success: false,\n        failure: true,\n        message: \"Login Unsuccessful\"\n      });\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: [show === true && message.failure ? /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"danger\",\n        onClose: () => setShow(false),\n        dismissible: true,\n        children: [/*#__PURE__*/_jsxDEV(Alert.Heading, {\n          children: message.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"Username or Password is incorrect.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), show === true && message.success ? /*#__PURE__*/_jsxDEV(Alert, {\n        variant: \"success\",\n        onClose: () => setShow(false),\n        dismissible: true,\n        children: [/*#__PURE__*/_jsxDEV(Alert.Heading, {\n          children: message.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"You will be redirected shortly.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false), /*#__PURE__*/_jsxDEV(Form, {\n        children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formBasicEmail\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Email address\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"email\",\n            placeholder: \"admin@gmail.com\",\n            name: \"username\",\n            value: fields.username,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Form.Group, {\n          className: \"mb-3\",\n          controlId: \"formBasicPassword\",\n          children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n            children: \"Password\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n            type: \"password\",\n            placeholder: \"password\",\n            name: \"password\",\n            value: fields.password,\n            onChange: handleInputChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 21\n        }, this), \"Admin account:\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 21\n        }, this), \"email: admin@gmail.com\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 21\n        }, this), \"password: password\", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          variant: \"primary\",\n          type: \"submit\",\n          onClick: submit,\n          children: \"Login\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 135,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 87,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Login, \"M5zT82biVj4ol9qJPIH6kIQ0OeA=\", false, function () {\n  return [useHistory, useSessionUser, useSessionUser, useForm];\n});\n\n_c = Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Login/Login.js"],"names":["axios","React","Container","Form","Button","useForm","useState","Alert","SESSION_USER","jwt_decode","useSessionUser","useHistory","Login","history","loginSessionUser","userType","fields","setFields","handleInputChange","show","setShow","message","setMessage","success","failure","submit","event","preventDefault","data","username","String","password","console","log","config","headers","Accept","withCredential","response","post","status","decoded","token","JSON","stringify","localStorage","setItem","parse","getItem","setTimeout","push","error"],"mappings":"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","sourcesContent":["import axios from 'axios';\nimport React from 'react'\nimport { Container, Form, Button } from 'react-bootstrap'\nimport { useForm } from '../../Hooks/useForm'\nimport { useState } from 'react';\nimport { Alert } from 'react-bootstrap';\nimport { SESSION_USER } from '../constants';\nimport jwt_decode from 'jwt-decode';\nimport { useSessionUser } from '../../Hooks/useSessionUser';\nimport { useHistory } from 'react-router-dom';\n\nexport const Login = () => {\n\n    const history = useHistory();\n    const {loginSessionUser} = useSessionUser();\n    const {userType} = useSessionUser();\n    const {fields, setFields, handleInputChange} = useForm({});\n    const [show, setShow] = useState(false);\n    const [message, setMessage] = useState({\n        success: false,\n        failure: false,\n        message: \"\"\n    })\n\n    const submit = async (event) => {\n        event.preventDefault()\n\n\n        const data = {\n            username: String(fields.username),\n            password: String(fields.password)\n        }\n        console.log(data)\n\n\n\n        try {\n            const config = {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    'Access-Control-Allow-Origin': '*',\n                },\n                withCredential: true\n            }\n            const response = await axios.post('http://localhost:8080/api/users/login', data, config);\n            // console.log(response.data.token);\n\n            if (response.status === 200)\n            {\n                setShow(true);\n                setMessage({\n                    success:true,\n                    failure:false,\n                    message: \"Login Successful\"\n                });\n\n                const decoded = jwt_decode(response.data.token);\n\n                loginSessionUser(JSON.stringify(decoded));\n                loginSessionUser(decoded);\n\n                console.log(JSON.stringify(decoded));\n\n                localStorage.setItem(SESSION_USER, JSON.stringify(decoded));\n\n                console.log(JSON.parse(localStorage.getItem(SESSION_USER)));\n\n                setTimeout(() => {history.push(\"/\")}, 3000)\n            }\n        }\n\n        catch (error) {\n            console.log(error);\n            \n            setShow(true);\n            setMessage({\n                success:false,\n                failure:true,\n                message: \"Login Unsuccessful\"\n            });\n\n        }\n\n    }\n    return (\n        <div>\n            <Container>\n                {\n                    show === true && message.failure\n                    ?\n                    <Alert variant=\"danger\" onClose={() => setShow(false)} dismissible>\n                    <Alert.Heading>{message.message}</Alert.Heading>\n                    <p>\n                        Username or Password is incorrect.\n                    </p>\n                    </Alert>\n                    :\n                    <></>\n                }\n\n                {\n                    show === true && message.success\n                    ?\n                    <Alert variant=\"success\" onClose={() => setShow(false)} dismissible>\n                    <Alert.Heading>{message.message}</Alert.Heading>\n                    <p>\n                        You will be redirected shortly.\n                    </p>\n                    </Alert>\n                    :\n                    <></>\n                }\n            <Form>\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control type=\"email\" placeholder=\"admin@gmail.com\" name = 'username' value = {fields.username} onChange={handleInputChange}/>\n\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"password\" name='password' value={fields.password} onChange={handleInputChange}/>\n                    </Form.Group>\n                              \n                    <br></br>\n                    Admin account: \n                    <br></br>\n                    email: admin@gmail.com\n                    <br></br>\n                    password: password\n                    <br></br>\n                    <br></br>\n\n                    <Button variant=\"primary\" type=\"submit\" onClick={submit}>\n                        Login\n                    </Button>\n            </Form>\n            </Container>\n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}