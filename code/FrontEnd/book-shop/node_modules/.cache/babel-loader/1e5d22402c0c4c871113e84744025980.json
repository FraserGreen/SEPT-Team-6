{"ast":null,"code":"var _jsxFileName = \"/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Book/BookListing.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router';\nimport { useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const BookListing = ({\n  bookID\n}) => {\n  _s();\n\n  const [tableData, setTableData] = useState([]);\n  const [book, setBook] = useState({\n    id: 0\n  });\n  const [dataLoaded, setLoadedData] = useState(false);\n  const [listings, setListings] = useState();\n\n  const populateData = async request => {\n    try {\n      const config = {\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*'\n        },\n        withCredential: true\n      };\n\n      if (request === \"getBook\") {\n        const bookRequest = {\n          id: parseInt(bookID)\n        };\n        console.log(\"Sending book request\");\n        const response = await axios.post(\"http://localhost:8081/api/books/getbook\", bookRequest, config);\n        return response.data;\n      } else if (request === \"getListings\") {\n        const listingRequest = {\n          bookId: parseInt(bookID)\n        };\n        console.log(\"Sending listings request\");\n        const response = await axios.post(\"http://localhost:8082/api/listings/getlistingsbybookid\", listingRequest, config);\n        console.log(\"Got listings\", response.data);\n        return response.data;\n      }\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    async function fetchData() {\n      if (dataLoaded === false) {\n        const bookData = await populateData(\"getBook\");\n        const listingsData = await populateData(\"getListings\");\n        setBook(bookData);\n        setLoadedData(true);\n\n        if (!listingsData.results) {\n          setListings(listingsData);\n        }\n      }\n    }\n\n    fetchData();\n  }, [dataLoaded, book, listings]);\n\n  if (tableData) {\n    const displayTableData = tableData.map(listItem => {\n      return /*#__PURE__*/_jsxDEV(\"tr\", {\n        children: [/*#__PURE__*/_jsxDEV(\"td\", {\n          children: listItem.id\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: listItem.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: listItem.author\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: listItem.type\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(\"td\", {\n          children: listItem.price\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 17\n        }, this), listItem.sold ? /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Sold\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 22\n        }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n          children: \"Not sold\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 17\n      }, this);\n    });\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 9\n  }, this);\n};\n\n_s(BookListing, \"wsph6Co4qCDEEU/drtwxUitNjsE=\");\n\n_c = BookListing;\n\nvar _c;\n\n$RefreshReg$(_c, \"BookListing\");","map":{"version":3,"sources":["/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Book/BookListing.js"],"names":["React","useState","axios","useParams","useEffect","BookListing","bookID","tableData","setTableData","book","setBook","id","dataLoaded","setLoadedData","listings","setListings","populateData","request","config","headers","Accept","withCredential","bookRequest","parseInt","console","log","response","post","data","listingRequest","bookId","error","fetchData","bookData","listingsData","results","displayTableData","map","listItem","title","author","type","price","sold"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router';\nimport { useEffect } from 'react';\n\nexport const BookListing = ({bookID}) => {\n    const [tableData, setTableData] = useState([]);\n    const [book, setBook] = useState({id: 0});\n    const [dataLoaded, setLoadedData] = useState(false);\n    const [listings, setListings] = useState();\n\n    const populateData = async (request) =>\n    {\n        try\n        {\n            const config = \n            {\n              headers: {\n                  Accept: 'application/json',\n                  'Content-Type': 'application/json',\n                  'Access-Control-Allow-Origin': '*',\n              },\n              withCredential: true\n            }\n\n            if (request === \"getBook\")\n            {\n                const bookRequest = {\n                    id:parseInt(bookID)\n                }\n    \n                console.log(\"Sending book request\")\n                const response = await axios.post(\"http://localhost:8081/api/books/getbook\", bookRequest, config);\n    \n                return response.data;\n            }\n\n            else if (request === \"getListings\")\n            {\n                const listingRequest = {\n                    bookId:parseInt(bookID)\n                }\n                    \n                console.log(\"Sending listings request\")\n                const response = await axios.post(\"http://localhost:8082/api/listings/getlistingsbybookid\", listingRequest, config);\n                console.log(\"Got listings\", response.data)\n                return response.data;\n            }\n\n        }  catch(error)\n        {\n            console.log(error)\n        }\n    }\n\n    useEffect(() => {\n        async function fetchData(){\n            if (dataLoaded === false) {\n                const bookData = await populateData(\"getBook\");\n                const listingsData = await populateData(\"getListings\");\n\n                setBook(bookData);\n                setLoadedData(true);\n                \n                if (!listingsData.results)\n                {\n                    setListings(listingsData);\n                }\n            }\n        }\n        fetchData();\n\n    }, [dataLoaded, book, listings])\n    if (tableData)\n    {\n        const displayTableData = tableData.map(listItem => {\n            return (\n                \n                <tr>\n                <td>{listItem.id}</td>\n                <td>{listItem.title}</td>\n                <td>{listItem.author}</td>\n                <td>{listItem.type}</td>\n                <td>{listItem.price}</td>\n                {\n                    listItem.sold\n                    ?\n                    (<div>\n                        Sold\n                    </div>)\n                    :\n                    (<div>\n                        Not sold\n                    </div>\n                    )\n                }\n                </tr>\n            )\n        })\n    }\n    return (\n        <div>\n            \n        </div>\n    )\n}\n"]},"metadata":{},"sourceType":"module"}