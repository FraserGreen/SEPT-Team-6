{"ast":null,"code":"var _jsxFileName = \"/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/CreateListing/CreateListing.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useState, useEffect } from 'react';\nimport { Col, Container, Row, Table, Button, NavLink, FormLabel } from 'react-bootstrap';\nimport { Form } from 'react-bootstrap';\nimport axios from 'axios';\nimport { useSessionUser } from '../../Hooks/useSessionUser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const CreateListing = () => {\n  _s();\n\n  const [dataLoaded, setDataLoaded] = useState(false);\n  const [books, setBooks] = useState();\n  const [selectedBook, setSelectedBook] = useState();\n  const {\n    sessionUser\n  } = useSessionUser();\n\n  const populateData = async () => {\n    try {\n      const responseGetData = await axios.get('http://localhost:8081/api/books/getallbooks');\n      return responseGetData.data;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"Session user\", sessionUser);\n\n    async function fetchData() {\n      if (dataLoaded === false) {\n        const booksData = await populateData();\n        console.log(\"BOO\", booksData);\n        setBooks(booksData);\n        setDataLoaded(true);\n      }\n    }\n\n    fetchData();\n  }, [dataLoaded]);\n\n  if (books) {\n    const booksList = books.map(book => {\n      return /*#__PURE__*/_jsxDEV(\"option\", {\n        value: book.id,\n        children: book.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 17\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Form, {\n          children: [/*#__PURE__*/_jsxDEV(Form.Group, {\n            children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n              children: \"Book\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Label, {\n              className: \"me-sm-2\",\n              htmlFor: \"inlineFormCustomSelect\",\n              visuallyHidden: true,\n              children: \"Select Book\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Form.Control, {\n              as: \"select\",\n              name: \"book\",\n              value: selectedBook,\n              onChange: e => {\n                setSelectedBook(e.target.value);\n                console.log(e.target.value);\n              },\n              children: booksList\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 21\n          }, this), /*#__PURE__*/_jsxDEV(\"fieldset\", {\n            children: /*#__PURE__*/_jsxDEV(Form.Group, {\n              as: Row,\n              className: \"mb-3\",\n              children: [/*#__PURE__*/_jsxDEV(Form.Label, {\n                as: \"legend\",\n                column: true,\n                sm: 2,\n                children: \"Quality\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Col, {\n                children: [/*#__PURE__*/_jsxDEV(Form.Check, {\n                  type: \"radio\",\n                  label: \"New\",\n                  name: \"formHorizontalRadios\",\n                  id: \"formHorizontalRadios1\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(Form.Check, {\n                  type: \"radio\",\n                  label: \"Used\",\n                  name: \"formHorizontalRadios\",\n                  id: \"formHorizontalRadios2\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 33\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(CreateListing, \"WxFvFmiY1v/fYHpyoNin/RusxJo=\", false, function () {\n  return [useSessionUser];\n});\n\n_c = CreateListing;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateListing\");","map":{"version":3,"sources":["/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/CreateListing/CreateListing.js"],"names":["React","useState","useEffect","Col","Container","Row","Table","Button","NavLink","FormLabel","Form","axios","useSessionUser","CreateListing","dataLoaded","setDataLoaded","books","setBooks","selectedBook","setSelectedBook","sessionUser","populateData","responseGetData","get","data","error","console","log","fetchData","booksData","booksList","map","book","id","title","e","target","value"],"mappings":"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","sourcesContent":["import React from 'react'\nimport { useState, useEffect} from 'react'\nimport { Col, Container, Row, Table, Button, NavLink, FormLabel} from 'react-bootstrap'\nimport { Form } from 'react-bootstrap'\nimport axios from 'axios'\nimport { useSessionUser } from '../../Hooks/useSessionUser'\n\nexport const CreateListing = () => {\n\n    const[dataLoaded, setDataLoaded] = useState(false)\n    const [books, setBooks] = useState()\n    const [selectedBook, setSelectedBook] = useState();\n    const {sessionUser} = useSessionUser();\n\n    const populateData = async () => \n    {\n        try \n        {\n            const responseGetData = await axios.get('http://localhost:8081/api/books/getallbooks');\n            return responseGetData.data;\n          \n        }   \n        catch(error)\n        {\n          console.log(error);\n        }\n    }\n    \n    useEffect(() => {\n        console.log(\"Session user\", sessionUser)\n        async function fetchData(){\n            if(dataLoaded === false){\n                const booksData = await populateData()\n                console.log(\"BOO\", booksData)\n                setBooks(booksData)\n                setDataLoaded(true)\n            }\n        }\n        fetchData()\n       \n    }, [dataLoaded])\n\n    if (books)\n    {\n        const booksList = books.map(book => {\n            return (\n                <option value = {book.id}>{book.title}</option>\n            )\n        })\n        return (\n            <div>\n                <Container>\n                    <Form>\n                    <Form.Group>\n                            <Form.Label>Book</Form.Label>\n    \n                            <Form.Label\n                                className=\"me-sm-2\"\n                                htmlFor=\"inlineFormCustomSelect\"\n                                visuallyHidden\n                                >\n                                Select Book\n                            </Form.Label>\n                            <Form.Control as =\"select\" name='book' value={selectedBook} onChange={e=> {\n                                setSelectedBook(e.target.value);\n                                console.log(e.target.value);\n                            }}>\n                                {booksList}\n                            </Form.Control>\n                            <br></br>\n    \n                        </Form.Group>\n\n                        {/* <Form.Group className=\"mb-3\" controlId='formBasicCheckbox'>\n                            <Form.Label> Quality </Form.Label>\n                            <Form.Check type='checkbox' label='New'/>\n\n                        </Form.Group> */}\n\n                        <fieldset>\n                            <Form.Group as={Row} className=\"mb-3\">\n                            <Form.Label as=\"legend\" column sm={2}>\n                                Quality\n                            </Form.Label>\n                            <Col >\n                                <Form.Check\n                                type=\"radio\"\n                                label=\"New\"\n                                name=\"formHorizontalRadios\"\n                                id=\"formHorizontalRadios1\"\n                                />\n                                <Form.Check\n                                type=\"radio\"\n                                label=\"Used\"\n                                name=\"formHorizontalRadios\"\n                                id=\"formHorizontalRadios2\"\n                                />\n                            </Col>\n                            </Form.Group>\n                        </fieldset>\n                    </Form>\n                </Container>\n    \n            </div>\n        )\n    }\n    else\n\n    {\n        return (\n            <div>\n\n            </div>\n        )\n    }\n    \n}\n"]},"metadata":{},"sourceType":"module"}