{"ast":null,"code":"var _jsxFileName = \"/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Genre/Genre.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React from 'react';\nimport { useParams } from 'react-router';\nimport { useState } from 'react';\nimport { data } from '../../data/Data';\nimport { useEffect } from 'react';\nimport { Container } from 'react-bootstrap';\nimport { Card, Col, Row } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\nimport '../Homepage/Homepage.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const Genre = () => {\n  _s();\n\n  const history = useHistory();\n  const {\n    genreParam\n  } = useParams();\n  const [books, setBooks] = useState();\n\n  const populateData = async () => {\n    try {\n      const config = {\n        headers: {\n          Accept: 'application/json',\n          'Content-Type': 'application/json',\n          'Access-Control-Allow-Origin': '*'\n        },\n        withCredential: true\n      };\n      const genreRequest = {\n        searchTerm: String(genreParam)\n      };\n      const responseGetData = await axios.post('http://localhost:8081/api/books/booksbygenre', genreRequest, config);\n      console.log(\"Get genre\", responseGetData);\n      return responseGetData.data;\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    console.log(\"use effect\");\n\n    async function fetchData() {\n      const bookData = await populateData(); // If there are actually books set it into book state\n\n      if (!bookData.results) {\n        setBooks(bookData);\n      } else {\n        setBooks();\n      }\n    }\n\n    fetchData();\n  }, [genreParam]);\n\n  const changeURL = bookId => {\n    history.push(\"/book/\" + bookId);\n  };\n\n  if (books) {\n    // if (books === (\"No results found for '\" + genreParam + \"'.\"))\n    // {\n    //     return (\n    //         <div>\n    //             <h1>\n    //                 No books found.\n    //             </h1>\n    //         </div>\n    //     )\n    // }\n    // else\n    // {\n    const booksDisplay = books.map(book => {\n      return /*#__PURE__*/_jsxDEV(Col, {\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          onClick: () => changeURL(book.id),\n          tag: \"a\",\n          style: {\n            width: '15rem',\n            height: '20rem',\n            maxHeight: '20rem',\n            cursor: 'pointer'\n          },\n          children: [/*#__PURE__*/_jsxDEV(Card.Img, {\n            variant: \"top\",\n            src: book.imgURL,\n            style: {\n              height: '25vh'\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"bookCardContent\",\n            children: /*#__PURE__*/_jsxDEV(Card.Body, {\n              children: [/*#__PURE__*/_jsxDEV(Card.Title, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bookCardTitle\",\n                  children: book.title\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 37\n              }, this), /*#__PURE__*/_jsxDEV(Card.Text, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: \"bookPrice\",\n                  children: [\"$\", book.price]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 96,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 37\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 33\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 29\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 17\n      }, this);\n    });\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(Row, {\n          children: booksDisplay\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 13\n    }, this);\n  } else {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Container, {\n        children: /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"No books for this category.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, this);\n  }\n};\n\n_s(Genre, \"lm8XzG+emh39JxkELWm/+oqE/ZI=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = Genre;\n\nvar _c;\n\n$RefreshReg$(_c, \"Genre\");","map":{"version":3,"sources":["/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Genre/Genre.js"],"names":["axios","React","useParams","useState","data","useEffect","Container","Card","Col","Row","useHistory","Genre","history","genreParam","books","setBooks","populateData","config","headers","Accept","withCredential","genreRequest","searchTerm","String","responseGetData","post","console","log","error","fetchData","bookData","results","changeURL","bookId","push","booksDisplay","map","book","id","width","height","maxHeight","cursor","imgURL","title","price"],"mappings":"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","sourcesContent":["import axios from 'axios'\nimport React from 'react'\nimport { useParams } from 'react-router'\nimport { useState } from 'react'\nimport { data } from '../../data/Data'\nimport { useEffect } from 'react'\nimport { Container } from 'react-bootstrap'\nimport { Card, Col, Row} from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\nimport '../Homepage/Homepage.css'\n\n\nexport const Genre = () => {\n\n    const history = useHistory();\n    const { genreParam } = useParams();\n    const [books, setBooks] = useState();\n\n\n    const populateData = async () =>\n    {\n        try\n        {\n            const config = \n            {\n              headers: {\n                  Accept: 'application/json',\n                  'Content-Type': 'application/json',\n                  'Access-Control-Allow-Origin': '*',\n              },\n              withCredential: true\n            }\n            const genreRequest = {\n                searchTerm:String(genreParam)\n            }\n            const responseGetData = await axios.post('http://localhost:8081/api/books/booksbygenre', genreRequest, config);\n            console.log(\"Get genre\", responseGetData)\n            return responseGetData.data;\n        }\n\n        catch (error)\n        {\n            console.log(error);\n        }\n    }\n\n    useEffect(() => {\n        console.log(\"use effect\")\n        async function fetchData() {\n            const bookData = await populateData();\n            // If there are actually books set it into book state\n            if(!bookData.results){\n                setBooks(bookData);\n            } else {\n                setBooks()\n            }\n        }\n        fetchData();\n    }, [genreParam])\n\n\n    const changeURL = (bookId) => {\n\n        history.push(\"/book/\"+ bookId)\n    }\n\n    if (books)\n    {\n        // if (books === (\"No results found for '\" + genreParam + \"'.\"))\n        // {\n        //     return (\n        //         <div>\n        //             <h1>\n        //                 No books found.\n        //             </h1>\n        //         </div>\n        //     )\n        // }\n        \n        // else\n        // {\n        const booksDisplay = books.map(book => {\n            return (\n                <Col>\n                    <Card onClick={() => changeURL(book.id)} tag='a' style={{ width: '15rem', height:'20rem', maxHeight:'20rem', cursor:'pointer'}} >\n                        <Card.Img variant=\"top\" src={book.imgURL} style={{height:'25vh'}} />\n                            <div className='bookCardContent'>\n\n                                <Card.Body>\n                                    <Card.Title>\n                                    <div className='bookCardTitle'>\n                                        {book.title}\n                                    </div>\n                                    </Card.Title>\n                                    <Card.Text>\n                                        <div className='bookPrice'>\n                                            ${book.price}\n                                        </div>\n                                    </Card.Text>\n                                </Card.Body>\n                            </div>\n\n                        </Card>\n                </Col>\n            )\n        })\n    \n        return (\n            <div>\n                <Container>\n                    <Row>\n                        {booksDisplay}\n                    </Row>\n                </Container>\n            </div>\n        )\n        \n    }\n   \n    else\n    {\n        return (\n            <div>\n                <Container>\n                    <h1>\n                        No books for this category.\n                    </h1>\n                </Container>\n            </div>\n        )\n    }\n}\n"]},"metadata":{},"sourceType":"module"}