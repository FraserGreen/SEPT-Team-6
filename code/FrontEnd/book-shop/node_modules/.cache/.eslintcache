[{"/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/index.js":"1","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/App/App.js":"2","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Header/Header.js":"3","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Navbar/Navbar.js":"4","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Header2/Header2.js":"5","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Login/Login.js":"6","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Register/RegisterBusiness.js":"7","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Register/Register.js":"8","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Management/ManageBooks.js":"9","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Management/Management.js":"10","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/Context/SessionUserContext.js":"11","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Genre/Genre.js":"12","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Management/ManageUsers.js":"13","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Search/Search.js":"14","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Management/AddBooks.js":"15","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Homepage/Homepage.js":"16","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Book/Book.js":"17","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/constants.js":"18","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Homepage/HomepageList.js":"19","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/Hooks/useForm.js":"20","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/Hooks/useSessionUser.js":"21","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/data/Data.js":"22","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/CreateListing/CreateListing.js":"23","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/My-Listings/MyListings.js":"24","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Book/BookListing.js":"25","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Cart/Cart.js":"26","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Footer/Footer.js":"27"},{"size":234,"mtime":1630497487023,"results":"28","hashOfConfig":"29"},{"size":2379,"mtime":1634043955091,"results":"30","hashOfConfig":"29"},{"size":3795,"mtime":1634042343883,"results":"31","hashOfConfig":"29"},{"size":1861,"mtime":1633016449621,"results":"32","hashOfConfig":"29"},{"size":2625,"mtime":1634041931931,"results":"33","hashOfConfig":"29"},{"size":4598,"mtime":1631962766867,"results":"34","hashOfConfig":"29"},{"size":7580,"mtime":1631962766870,"results":"35","hashOfConfig":"29"},{"size":6936,"mtime":1631962766870,"results":"36","hashOfConfig":"29"},{"size":3609,"mtime":1633520554267,"results":"37","hashOfConfig":"29"},{"size":1995,"mtime":1631962766869,"results":"38","hashOfConfig":"29"},{"size":2253,"mtime":1633438235796,"results":"39","hashOfConfig":"29"},{"size":3800,"mtime":1633434799850,"results":"40","hashOfConfig":"29"},{"size":152,"mtime":1631962766868,"results":"41","hashOfConfig":"29"},{"size":4413,"mtime":1633595313677,"results":"42","hashOfConfig":"29"},{"size":8422,"mtime":1633574473919,"results":"43","hashOfConfig":"29"},{"size":3961,"mtime":1633572612127,"results":"44","hashOfConfig":"29"},{"size":11607,"mtime":1634042798555,"results":"45","hashOfConfig":"29"},{"size":81,"mtime":1631962766871,"results":"46","hashOfConfig":"29"},{"size":613,"mtime":1631962766866,"results":"47","hashOfConfig":"29"},{"size":317,"mtime":1630497487013,"results":"48","hashOfConfig":"29"},{"size":181,"mtime":1633016449618,"results":"49","hashOfConfig":"29"},{"size":984,"mtime":1630497487022,"results":"50","hashOfConfig":"29"},{"size":8753,"mtime":1633577825240,"results":"51","hashOfConfig":"29"},{"size":7689,"mtime":1633600194797,"results":"52","hashOfConfig":"29"},{"size":9779,"mtime":1633651051715,"results":"53","hashOfConfig":"29"},{"size":118,"mtime":1634039728252,"results":"54","hashOfConfig":"29"},{"size":589,"mtime":1634042687244,"results":"55","hashOfConfig":"29"},{"filePath":"56","messages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"5rrci",{"filePath":"59","messages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66","usedDeprecatedRules":"58"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"69","usedDeprecatedRules":"58"},{"filePath":"70","messages":"71","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"72","usedDeprecatedRules":"58"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"58"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"78","messages":"79","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80","usedDeprecatedRules":"58"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"58"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"86","messages":"87","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"88","usedDeprecatedRules":"58"},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"58"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"58"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"97","usedDeprecatedRules":"58"},{"filePath":"98","messages":"99","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"100","usedDeprecatedRules":"58"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"103","usedDeprecatedRules":"58"},{"filePath":"104","messages":"105","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"106","messages":"107","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"108","messages":"109","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"116","usedDeprecatedRules":"58"},{"filePath":"117","messages":"118","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"119","usedDeprecatedRules":"58"},{"filePath":"120","messages":"121","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"122","usedDeprecatedRules":"58"},{"filePath":"123","messages":"124","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},{"filePath":"125","messages":"126","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"58"},"/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/index.js",[],["127","128"],"/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/App/App.js",["129"],"\nimport './App.css';\nimport axios from 'axios';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport {Header} from '../Header/Header';\nimport {Homepage} from '../Homepage/Homepage';\nimport {Login} from '../Login/Login';\nimport {Register} from '../Register/Register';\nimport {NavigationBar} from '../Navbar/Navbar';\nimport { Header2 } from '../Header2/Header2';\nimport { Management } from '../Management/Management';\nimport { SessionUserProvider } from '../../Context/SessionUserContext';\nimport { ManageBooks } from '../Management/ManageBooks';\nimport { ManageUsers } from '../Management/ManageUsers';\nimport { AddBooks } from '../Management/AddBooks';\nimport { Book } from '../Book/Book';\nimport { RegisterBusiness } from '../Register/RegisterBusiness';\nimport { Genre } from '../Genre/Genre';\nimport { Search } from '../Search/Search';\nimport { MyListings } from '../My-Listings/MyListings';\nimport { CreateListing } from '../CreateListing/CreateListing';\nimport { Cart } from '../Cart/Cart';\nimport { Footer } from '../Footer/Footer';\n\n\n\nfunction App() \n{\n\n  return (\n    \n    <div>\n      <SessionUserProvider>\n        <Router>\n        <Header />\n        <Header2 />\n        <NavigationBar/>\n          <Switch>\n            <Route path=\"/login\" component={()=> <Login/>}/>\n            <Route path=\"/register/business\" component={()=> <RegisterBusiness/>}/>\n            <Route path=\"/register\" component={()=> <Register/>}/>\n            <Route path=\"/book/:bookID\" component={() => <Book/>}/>\n            <Route path=\"/genre/:genreParam\" component={() => <Genre/>}/>\n            <Route path=\"/search/:searchInput\" component={() => <Search/>}/>\n            <Route path=\"/management/books/add\" component={()=> <AddBooks/>}/>\n            <Route path=\"/management/books\" component={()=> <ManageBooks/>}/>\n            <Route path=\"/management/users\" component={()=> <ManageUsers/>}/>\n            <Route path=\"/management\" component={()=> <Management/>}/>\n            <Route path=\"/create-listing\" component={()=> <CreateListing/>}/>\n            <Route path=\"/my-listings\" component={()=> <MyListings/>}/>\n            <Route path=\"/cart\" component={()=> <Cart/>}/>\n            <Route path=\"/\" component={()=> <Homepage/> }/>\n          </Switch>\n        </Router>\n        <Footer/>\n      </SessionUserProvider>\n\n      \n    </div>\n  );\n}\n\nexport default App;\n","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Header/Header.js",[],"/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Navbar/Navbar.js",["130"],"\nimport React from 'react'\nimport { Col, Container, Nav, Row } from 'react-bootstrap'\nimport { NavLink } from 'react-router-dom'\n\nimport './Navbar.css';\n\n\nexport const NavigationBar = () => {\n\n    return (\n        <div className='categories'>\n            <br></br>\n            <Container>\n                <Row>\n                    <Col>\n                        <NavLink to=\"/genre/fiction\" style={{textDecoration:\"none\"}}>\n                            <div className = 'navItems' >\n                                Fiction\n                            </div>\n                            </NavLink>\n                    </Col>\n\n                    <Col>\n                        <NavLink to=\"/genre/non-fiction\" style={{textDecoration:\"none\"}}>\n                            <div className = 'navItems'> \n                                Non Fiction\n                            </div></NavLink>\n                    </Col>\n\n                    <Col>\n                        <NavLink to=\"/genre/kids-teens\" style={{textDecoration:\"none\"}}>\n                            <div className = 'navItems'>\n                                Kids & Teen\n                            </div>\n                            </NavLink>\n                    </Col>\n\n                    <Col>\n                        <NavLink to=\"/genre/adult\" style={{textDecoration:\"none\"}}>\n                            <div className='navItems'>\n                                Adult\n                            </div></NavLink>\n                    </Col>\n\n                    <Col>\n                        <NavLink to=\"/genre/school\" style={{textDecoration:\"none\"}}>\n                            <div className='navItems'>\n                                School\n                            </div></NavLink> \n                    </Col>\n                </Row>\n\n\n\n            </Container>\n\n        </div>\n    )\n}\n","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Header2/Header2.js",["131","132","133"],"import React from 'react'\nimport {Button, Container, Row, Col, Image} from 'react-bootstrap'\nimport { FormControl } from 'react-bootstrap'\nimport { Form } from 'react-bootstrap'\nimport { useHistory} from 'react-router'\nimport { useState } from 'react'\nimport { NavLink } from 'react-router-dom'\nimport \"./Header2.css\"\n\nexport const Header2 = () => {\n    const history = useHistory();\n    const [searchInput, setSearch] = useState(\"\");\n    const changeURL = () => {\n        if (searchInput !== \"\")\n        {\n            history.push('/search/' + searchInput)\n        }\n    }\n    return (\n        <div className='header2'>\n            <Container>\n                <Row>\n                    <Col md={4}>\n                        <NavLink to = '/' style={{textDecoration:\"none\"}}>                        \n                        <h1 className='logo'>\n                            BOOKEROO\n                        </h1>\n                        </NavLink>\n                    </Col>\n\n\n                    <Col md={{span:6, offset:2}}>\n\n                        <br/>\n\n\n                            <Form className=\"d-flex\">\n                            <FormControl\n                                type=\"search\"\n                                placeholder=\"Search\"\n                                className=\"mr-2\"\n                                aria-label=\"Search\"\n                                value = {searchInput}\n                                onChange={event=>setSearch(event.target.value)}\n                                onKeyPress={event=> {\n                                    if (event.key == \"Enter\")\n                                    {\n                                        changeURL()\n                                    }\n                                }}\n                            />\n                            <Button onClick={changeURL} variant=\"outline-success\">Search</Button>\n\n                            <div className='cart'>\n                                <NavLink to='/cart'>\n                                    <Button style={{background:'white', borderColor:'white', maxHeight:'50px', alignSelf:'center'}}> \n                                        <img style={{maxHeight:'50px'}}src='https://i.pinimg.com/originals/15/4f/df/154fdf2f2759676a96e9aed653082276.png'/>\n                                    </Button>\n                                </NavLink>\n                            </div>\n                            </Form>\n\n                        \n                    </Col>      \n              \n                </Row>\n               \n            </Container>\n\n           \n        </div>\n    )\n}\n","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Login/Login.js",["134","135"],"import axios from 'axios';\nimport React from 'react'\nimport { Container, Form, Button } from 'react-bootstrap'\nimport { useForm } from '../../Hooks/useForm'\nimport { useState } from 'react';\nimport { Alert } from 'react-bootstrap';\nimport { SESSION_USER } from '../constants';\nimport jwt_decode from 'jwt-decode';\nimport { useSessionUser } from '../../Hooks/useSessionUser';\nimport { useHistory } from 'react-router-dom';\n\nexport const Login = () => {\n\n    const history = useHistory();\n    const {loginSessionUser} = useSessionUser();\n    const {userType} = useSessionUser();\n    const {fields, setFields, handleInputChange} = useForm({});\n    const [show, setShow] = useState(false);\n    const [message, setMessage] = useState({\n        success: false,\n        failure: false,\n        message: \"\"\n    })\n\n    const submit = async (event) => {\n        event.preventDefault()\n\n\n        const data = {\n            username: String(fields.username),\n            password: String(fields.password)\n        }\n        console.log(data)\n\n\n\n        try {\n            const config = {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    'Access-Control-Allow-Origin': '*',\n                },\n                withCredential: true\n            }\n            const response = await axios.post('http://localhost:8080/api/users/login', data, config);\n            // console.log(response.data.token);\n\n            if (response.status === 200)\n            {\n                setShow(true);\n                setMessage({\n                    success:true,\n                    failure:false,\n                    message: \"Login Successful\"\n                });\n\n                const decoded = jwt_decode(response.data.token);\n\n                loginSessionUser(JSON.stringify(decoded));\n                loginSessionUser(decoded);\n\n                console.log(JSON.stringify(decoded));\n\n                localStorage.setItem(SESSION_USER, JSON.stringify(decoded));\n\n                console.log(JSON.parse(localStorage.getItem(SESSION_USER)));\n\n                setTimeout(() => {history.push(\"/\")}, 3000)\n            }\n        }\n\n        catch (error) {\n            console.log(error);\n            \n            setShow(true);\n            setMessage({\n                success:false,\n                failure:true,\n                message: \"Login Unsuccessful\"\n            });\n\n        }\n\n    }\n    return (\n        <div>\n            <Container>\n                {\n                    show === true && message.failure\n                    ?\n                    <Alert variant=\"danger\" onClose={() => setShow(false)} dismissible>\n                    <Alert.Heading>{message.message}</Alert.Heading>\n                    <p>\n                        Username or Password is incorrect.\n                    </p>\n                    </Alert>\n                    :\n                    <></>\n                }\n\n                {\n                    show === true && message.success\n                    ?\n                    <Alert variant=\"success\" onClose={() => setShow(false)} dismissible>\n                    <Alert.Heading>{message.message}</Alert.Heading>\n                    <p>\n                        You will be redirected shortly.\n                    </p>\n                    </Alert>\n                    :\n                    <></>\n                }\n            <Form>\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control type=\"email\" placeholder=\"admin@gmail.com\" name = 'username' value = {fields.username} onChange={handleInputChange}/>\n\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"password\" name='password' value={fields.password} onChange={handleInputChange}/>\n                    </Form.Group>\n                              \n                    <br></br>\n                    Admin account: \n                    <br></br>\n                    email: admin@gmail.com\n                    <br></br>\n                    password: password\n                    <br></br>\n                    <br></br>\n\n                    <Button variant=\"primary\" type=\"submit\" onClick={submit}>\n                        Login\n                    </Button>\n            </Form>\n            </Container>\n        </div>\n    )\n}\n","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Register/RegisterBusiness.js",["136"],"import React from 'react'\nimport { Form, Button, Container, Alert} from 'react-bootstrap'\nimport { useForm } from '../../Hooks/useForm'\nimport { useState } from 'react'\nimport { NavLink } from 'react-router-dom';\n\nconst axios = require('axios');\n\n\nexport const RegisterBusiness = () => {\n    const passwordLength = 6;\n    const phoneLength = 10;\n    const {fields, setFields, handleInputChange} = useForm({});\n    const [show, setShow] = useState(false);\n    const [message, setMessage] = useState({\n        success:false,  \n        failure:false,\n        message:\"\"\n    });\n\n    const submit =  async (event) => {\n        event.preventDefault()\n        if (fields.password !== fields.confirmPassword)\n        {\n            setShow(true);\n\n            setMessage({\n                success: false,\n                failure: true,\n                message: \"Passwords do not match!\"\n            })\n\n            return;\n        }\n\n        if ((fields.password.length < passwordLength) || (fields.confirmPassword.length < passwordLength))\n        {\n            setShow(true);\n\n            setMessage({\n                success: false,\n                failure: true,\n                message: \"Passwords is not long enough!\"\n            })\n\n            return;\n        }\n\n        if (fields.phone.length !== phoneLength || String(fields.phone).charAt(0) !== '0')\n        {\n            setShow(true);\n            setMessage({\n                success: false,\n                failure: true,\n                message: \"Phone number invalid\"\n            })\n\n            return;\n        }\n\n        const data = {\n            username: String(fields.username),\n            firstName: String(fields.firstName),\n            lastName: String(fields.lastName),\n            address: String(fields.address),\n            phone: String(fields.phone),\n            userType: \"business\",\n            abn: String(fields.abn),\n            businessName: String(fields.businessName),\n            password: String(fields.password),\n            confirmPassword: String(fields.confirmPassword)\n        }\n\n        try {\n            const config = {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    'Access-Control-Allow-Origin': '*',\n                },\n                withCredential: true\n            }\n\n            // Post URL form here\n            const response = await axios.post('http://localhost:8080/api/users/register', data, config);\n            if(response.status === 201){\n                setFields( {\n                    username: \"\",\n                    firstName: \"\",\n                    lastName: \"\",\n                    address: \"\",\n                    phone: \"\",\n                    abn: \"\",\n                    businessName: \"\",\n                    password: \"\",\n                    confirmPassword: \"\"\n                })\n\n                setShow(true);\n\n                setMessage({\n                    success: true,\n                    failure: false,\n                    message: \"Account creation success\"\n                });\n            }\n\n        }\n        catch (error) {\n            console.log(error)\n            setShow(true);\n            setMessage({\n                success: false,\n                failure: true,\n                message: \"Account creation failure\"\n            });\n        }\n\n\n\n    }\n        \n\n\n    return (\n        <div>\n            \n            <Container>\n                {\n                    show === true && message.failure\n                    ?\n                    <Alert variant=\"danger\" onClose={() => setShow(false)} dismissible>\n                    <Alert.Heading>{message.message}</Alert.Heading>\n                    <p>\n                    Fields are incorrect\n                    </p>\n                    </Alert>\n                    :\n                <></>\n                }\n\n                {\n                    show === true && message.success\n                    ?\n                    <Alert variant=\"success\" onClose={() => setShow(false)} dismissible>\n                    <Alert.Heading>{message.message}</Alert.Heading>\n                    <p>\n                    Account successfully created!\n                    </p>\n                    </Alert>\n                    :\n                <></>\n                }\n\n                <Form>\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control type=\"email\" placeholder=\"john.doe@gmail.com\" name = 'username' value = {fields.username} onChange={handleInputChange}/>\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"formFirstName\">\n                        <Form.Label>First name</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Hugh\" name = 'firstName' value = {fields.firstName} onChange= {handleInputChange}/>\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"formLastName\">\n                        <Form.Label>Last name</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Janus\" name = 'lastName' value = {fields.lastName} onChange= {handleInputChange}/>\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"formAddress\">\n                        <Form.Label>Address</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"2 Dickson Court\" name = 'address' value = {fields.address} onChange= {handleInputChange}/>\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"formPhone\">\n                        <Form.Label>Phone</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"0438262941\" name = 'phone' value = {fields.phone} onChange= {handleInputChange}/>\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"formABN\">\n                        <Form.Label>ABN</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"51824753556 (11 digit number)\" name = 'abn' value = {fields.abn} onChange= {handleInputChange}/>\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"formBusinessName\">\n                        <Form.Label>Business Name</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Lars Janus' Books\" name = 'businessName' value = {fields.businessName} onChange= {handleInputChange}/>\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Password\" name='password' value={fields.password} onChange={handleInputChange}/>\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Password\" name='confirmPassword' value={fields.confirmPassword} onChange={handleInputChange}/>\n                    </Form.Group>\n          \n                    <br></br>\n                    <Button variant=\"primary\" type=\"submit\" onClick={submit}>\n                        Submit\n                    </Button>\n                    <br></br>\n                </Form>\n            </Container>\n            \n        </div>\n    )\n}\n","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Register/Register.js",[],"/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Management/ManageBooks.js",["137","138"],"import React, {useState, useEffect} from 'react'\nimport { Button, Table, Container, Row, Col, Form, Label} from 'react-bootstrap'\nimport { NavLink } from 'react-router-dom';\nimport './ManageBooks.css';\nimport axios from 'axios';\n\n\nexport const ManageBooks = () => {\n    \n    const[dataLoaded,setDataLoaded] = useState(false);\n    const[data, setData] = useState();\n\n    const getTableContents = async () =>\n    {\n        try\n        {\n            const response = await axios.get('http://localhost:8081/api/books/getallbooks');\n\n            return response.data;\n        }\n        catch (error)\n        {\n\n        }\n    }\n\n    useEffect(()=>\n    {\n        async function fetchData() {\n            if (dataLoaded === false)\n            {\n                const booksData = await getTableContents();\n                console.log(booksData);\n                setData(booksData);\n                setDataLoaded(true);\n            }\n        }\n        fetchData();\n    }, [dataLoaded, data])\n\n\n    if(data){\n        const allBooksData = data.map(book => {\n            return (\n                \n                <tr>\n                <td>{book.id}</td>\n                <td>{book.title}</td>\n                <td>{book.author}</td>\n                {/* <td>\n                    ${book.price} */}\n                {/* <Form>\n                    <Form.Label\n                        className=\"me-sm-2\"\n                        htmlFor=\"inlineFormCustomSelect\"\n                        visuallyHidden\n                        >\n                        Pending\n                    </Form.Label>\n                    <Form.Select className=\"me-sm-2\" id=\"inlineFormCustomSelect\">\n                        <option value=\"0\">Pending</option>\n                        <option value=\"1\">Accepted</option>\n                        <option value=\"2\">Rejected</option>\n                    </Form.Select>\n                </Form> */}\n                {/* </td> */}\n        \n                </tr>\n            \n                \n            )\n        })\n        return(\n            <div>\n            <Container>\n                <Row>\n                    <Col>\n                        <div>\n                            <NavLink to = \"/management\">\n                                <Button variant='danger' style={{width:'100px', float:'left'}}>\n                                    Back\n                                </Button>\n                            </NavLink>\n                        </div>\n                    </Col>\n                    <Col>\n                        <div className='addBook'>\n                            <NavLink to = \"/management/books/add\">\n                                <Button variant ='success' style={{width:'100px'}}>\n                                    Add\n                                </Button>\n                            </NavLink>\n                        </div>\n                    </Col>\n                </Row>\n            </Container>\n\n            <Container>\n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                        <th>Book ID</th>\n                        <th>Title</th>\n                        <th>Author</th>\n                        {/* <th>Price</th> */}\n\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {allBooksData}\n                    </tbody>\n\n                </Table>\n                \n            </Container>\n        \n\n            </div>\n        )\n    }\n    else{\n        return (\n            <div>\n                \n            </div>\n    \n        )\n    }\n \n   \n}\n","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Management/Management.js",["139","140"],"import React from 'react'\nimport './Management.css';\nimport { Button, Row, Col, Container} from 'react-bootstrap'\nimport { Image } from 'react-bootstrap';\nimport { Card } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\n\nexport const Management = () => {\n    const history = useHistory();\n\n    const goToBookManagement = () => {\n        history.push(\"/management/books\");\n    };\n\n    const goToUserManagement = () => {\n        history.push(\"/management/users\");\n    };\n\n    return (\n        <div >\n            <Container>\n                <div className='paddingContainer'>\n                <Row>\n                    <Col>\n                        <div className='buttonCustom'>\n                            <Card tag='a' onClick={goToBookManagement} style={{cursor: 'pointer'}}>\n                            <Card.Img variant=\"top\" src=\"https://www.iconpacks.net/icons/2/free-opened-book-icon-3163-thumb.png\" />\n                            <Card.Body>\n                            <Card.Text className='text-center'>\n                                Manage Books\n                            </Card.Text>\n                            </Card.Body>\n                            </Card>\n                        </div>\n                    </Col>\n                    <Col>\n                        <div className='buttonCustom'>\n                            <Card tag='a' onClick={goToUserManagement} style={{cursor:'pointer'}}>\n                            <Card.Img variant=\"top\" src=\"https://upload.wikimedia.org/wikipedia/commons/9/99/Sample_User_Icon.png\" />\n\n                            <Card.Body>\n                            <Card.Text className='text-center'>\n                                Manage Users\n                            </Card.Text>\n                            </Card.Body>\n                            </Card>      \n                        </div>\n                    </Col>\n                </Row>\n                </div>\n\n            </Container>\n\n      </div>\n    )\n}\n","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/Context/SessionUserContext.js",[],"/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Genre/Genre.js",["141","142"],"import axios from 'axios'\nimport React from 'react'\nimport { useParams } from 'react-router'\nimport { useState } from 'react'\nimport { data } from '../../data/Data'\nimport { useEffect } from 'react'\nimport { Container } from 'react-bootstrap'\nimport { Card, Col, Row} from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\nimport '../Homepage/Homepage.css'\n\n\nexport const Genre = () => {\n\n    const history = useHistory();\n    const { genreParam } = useParams();\n    const [books, setBooks] = useState();\n\n\n    const populateData = async () =>\n    {\n        try\n        {\n            const config = \n            {\n              headers: {\n                  Accept: 'application/json',\n                  'Content-Type': 'application/json',\n                  'Access-Control-Allow-Origin': '*',\n              },\n              withCredential: true\n            }\n            const genreRequest = {\n                searchTerm:String(genreParam)\n            }\n            const responseGetData = await axios.post('http://localhost:8081/api/books/booksbygenre', genreRequest, config);\n            console.log(\"Get genre\", responseGetData)\n            return responseGetData.data;\n        }\n\n        catch (error)\n        {\n            console.log(error);\n        }\n    }\n\n    useEffect(() => {\n        console.log(\"use effect\")\n        async function fetchData() {\n            const bookData = await populateData();\n            // If there are actually books set it into book state\n            if(!bookData.results){\n                setBooks(bookData);\n            } else {\n                setBooks()\n            }\n        }\n        fetchData();\n    }, [genreParam])\n\n\n    const changeURL = (bookId) => {\n\n        history.push(\"/book/\"+ bookId)\n    }\n\n    if (books)\n    {\n        // if (books === (\"No results found for '\" + genreParam + \"'.\"))\n        // {\n        //     return (\n        //         <div>\n        //             <h1>\n        //                 No books found.\n        //             </h1>\n        //         </div>\n        //     )\n        // }\n        \n        // else\n        // {\n        const booksDisplay = books.map(book => {\n            return (\n                <Col md='auto'>\n                    <Card onClick={() => changeURL(book.id)} tag='a' style={{ width: '15rem', height:'22rem', maxHeight:'22rem', cursor:'pointer'}} >\n                        <Card.Img variant=\"top\" src={book.imgURL} style={{height:'100%'}} />\n                            {/* <div className='bookCardContent'>\n\n                                <Card.Body>\n                                    <Card.Title>\n                                    <div className='bookCardTitle'>\n                                        {book.title}\n                                    </div>\n                                    </Card.Title>\n                                    <Card.Text>\n                                        <div className='bookPrice'>\n                                            ${book.price}\n                                        </div>\n                                    </Card.Text>\n                                </Card.Body>\n                            </div> */}\n\n                        </Card>\n                </Col>\n            )\n        })\n    \n        return (\n            <div>\n                <Container>\n                    <div>\n                    <Row>\n                        {booksDisplay}\n                    </Row>\n                    </div>\n                </Container>\n            </div>\n        )\n        \n    }\n   \n    else\n    {\n        return (\n            <div>\n                <Container>\n                    <h1>\n                        No books for this category.\n                    </h1>\n                </Container>\n            </div>\n        )\n    }\n}\n","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Management/ManageUsers.js",["143"],"import React from 'react'\nimport { Form } from 'react-bootstrap'\n\nexport const ManageUsers = () => {\n    return (\n        <div>\n\n        </div>\n    )\n}\n","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Search/Search.js",["144"],"import React from 'react'\nimport { useParams } from 'react-router'\nimport { useState } from 'react';\nimport { useEffect } from 'react';\nimport axios from 'axios';\nimport { Card, Row, Col, Container} from 'react-bootstrap'\nimport { useHistory } from 'react-router';\n\nexport const Search = () => {\n\n    const history = useHistory();\n\n    const {searchInput} = useParams();\n\n    const[books, setBooks] = useState();\n    const[searchType, setSearchType] = useState()\n\n\n    const changeURL = (bookId) => {\n\n        history.push(\"/book/\"+ bookId)\n    }\n\n    const populateData = async () => \n    {\n\n        try\n        {\n            const config = \n            {\n                headers: {\n                    // Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    // 'Access-Control-Allow-Origin': '*'\n                },\n                // withCredentials:true\n            }\n\n            const searchRequest = {\n                searchTerm:String(searchInput)\n            }\n            console.log(\"Search:\", searchInput)\n            const responseGetData = await axios.post('http://localhost:8081/api/books/searchbooks', searchRequest, config);\n            console.log(\"Got search\", responseGetData)\n\n            return responseGetData.data;\n        }\n        catch(error)\n        {\n            console.log(error);\n        }\n    }\n\n    useEffect(() => {\n        console.log(\"useEffect\")\n        async function fetchData() {\n            console.log(\"fetch data\")\n            const bookData = await populateData();\n            if (!bookData.results)\n            {\n                if (bookData.author)\n                {\n                    setSearchType(\"Authors\")\n                    setBooks(bookData.author)\n                }\n\n                if (bookData.title)\n                {\n                    setSearchType(\"Titles\")\n                    setBooks(bookData.title)\n                }\n                \n                if (bookData.isbn)\n                {\n                    setSearchType(\"ISBN\")\n\n                    setBooks(bookData.isbn)\n                }\n\n                if (bookData.genre)\n                {\n                    setSearchType(\"Genres\")\n\n                    setBooks(bookData.genre)\n                }\n\n\n            }\n            else\n            {\n                setBooks()\n            }\n        }\n\n        fetchData();\n    }, [searchInput])\n\n    if (books)\n    {\n        const booksDisplay = books.map(book => \n            {\n                return (\n                    <Col md='auto'>\n                        <Card onClick={() => changeURL(book.id)} tag='a' style={{ width: '15rem', height:'22rem', maxHeight:'22rem', cursor:'pointer'}} >\n                            <Card.Img variant=\"top\" src={book.imgURL} style={{height:'100%'}} />\n                                {/* <div className='bookCardContent'>\n\n                                    <Card.Body>\n                                        <Card.Title>\n                                            <div className='bookCardTitle'>\n                                            {book.title}\n                                            </div>\n                                        </Card.Title>\n                                        <Card.Text>\n                                            <div className='bookPrice'>\n                                                ${book.price}\n                                            </div>\n                                        </Card.Text>\n                                    </Card.Body>\n                                </div> */}\n\n                        </Card>\n                </Col>\n                )\n            }\n        )\n\n        return (\n            <div>\n                <Container>\n                    <Row>\n                        <h1>\n                            Search results for: \"{searchInput}\" found in {searchType}\n                        </h1>\n                    </Row>\n                    <br/>\n                    <Row>\n                        {booksDisplay}\n                    </Row>\n                </Container>\n            </div>\n        )\n    }\n    else\n    {\n        return (\n            <div>\n                <Container>\n                <h1>\n                    No results found for '{searchInput}'\n                </h1>\n                <br/>\n\n                </Container>\n            </div>\n        )\n    }\n\n}\n","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Management/AddBooks.js",["145"],"import React from 'react'\nimport { useForm } from '../../Hooks/useForm'\nimport { useState } from 'react';\nimport { Form, Container, Button, Alert, Row, FloatingLabel} from 'react-bootstrap'\nimport { useHistory, NavLink} from 'react-router-dom';\nimport './ManageBooks.css'\n// import './Management/ManageBooks.css'\n\nconst axios = require('axios');\n\nexport const AddBooks = () => {\n\n    const history = useHistory();\n    const maxWords = 35;\n\n    const {fields, setFields, handleInputChange} = useForm({});\n    const [genreValue, setGenre] = useState('Fiction');\n    const [show, setShow] = useState(false);\n    const [message, setMessage] = useState({\n        success:false,\n        failure:false,\n        message:\"\"\n    });\n\n    function isEmptyOrSpaces(str){\n        return str === null;\n    };\n\n    const submit = async (event) => {\n        if (isEmptyOrSpaces(fields.isbn) || isEmptyOrSpaces(fields.name) || isEmptyOrSpaces(fields.author) || isEmptyOrSpaces(fields.genre))\n        {\n            setShow(true);\n\n            setMessage({\n                    success:false,\n                    failure:true,\n                    message:\"Fields not filled in.\"\n                });\n            return;\n        }\n\n        \n\n        var calculateDescriptionLength = () =>\n        {\n            var string = document.getElementById('description').value;\n            var length = string.split(/[^\\s]+/).length - 1;\n            return length;\n        }\n\n        if (calculateDescriptionLength() > maxWords)\n        {\n            setShow(true);\n            \n            setMessage({\n                success:false,\n                failure:true,\n                message:\"Description too long!\"\n            })\n\n            return;\n        }\n        const data = {\n            isbn: String(fields.isbn),\n            title: String(fields.title),\n            author: String(fields.author),\n            genre: String(genreValue),\n            description: String(fields.description),\n            imgURL: String(fields.imgURL),\n            price: String(fields.price)\n        };\n\n        try {\n\n        \n            const config = \n                {\n                    headers: {\n                        Accept: 'application/json',\n                        'Content-Type': 'application/json',\n                        'Access-Control-Allow-Origin': '*',\n                    },\n                    withCredential: true\n                 };\n\n            const response = await axios.post(\"http://localhost:8081/api/books/addbook\", data, config);\n\n            if (response.status === 201)\n            {\n                console.log(response);\n                setFields({\n                    isbn:\"\",\n                    title:\"\",\n                    author:\"\",\n                    genre:\"\",\n                    description:\"\",\n                    imgURL:\"\",\n                    price:\"\"\n                })\n\n                setShow(true);\n\n                setMessage({\n                    success: true,\n                    failer: false,\n                    message: \"Book Creation Success\"\n                });\n            }\n        }\n\n        catch (error) {\n            console.log(error);\n            console.log(data);\n            setShow(true);\n            setMessage({\n                success: false,\n                failure: true,\n                message: \"Book Creation Failure\"\n            });\n        };\n    }\n    return (\n        <div>\n            <div>\n            <Container>\n                {\n                    show === true && message.failure\n                    ?\n                    <Alert variant=\"danger\" onClose={() => setShow(false)} dismissible>\n                    <Alert.Heading>{message.message}</Alert.Heading>\n                    <p>\n                    Fields are incorrect\n                    </p>\n                    </Alert>\n                    :\n                <></>\n                }\n\n                {\n                    show === true && message.success\n                    ?\n                    <Alert variant=\"success\" onClose={() => setShow(false)} dismissible>\n                    <Alert.Heading>{message.message}</Alert.Heading>\n                    <p>\n                    Book successfully created!\n                    </p>\n                    </Alert>\n                    :\n                <></>\n                }\n            <Form>\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Title</Form.Label>\n                    <Form.Control placeholder=\"The Hungry Caterpillar\" name = 'title' value={fields.title} onChange={handleInputChange}/>\n                </Form.Group>\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>ISBN</Form.Label>\n                    <Form.Control placeholder=\"1234567890\" name='isbn' value={fields.isbn} onChange={handleInputChange} />\n                </Form.Group>\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Author</Form.Label>\n                    <Form.Control placeholder=\"Hugh Janus\" name='author' value={fields.author} onChange={handleInputChange} />\n                </Form.Group>\n                {/* <Form.Group className=\"mb-3\">\n                    <Form.Label>Genre</Form.Label>\n                    <Form.Control placeholder=\"Comedy\" name='genre' value={fields.genre} onChange={handleInputChange}/>\n                </Form.Group> */}\n                <Form.Group>\n                    <Form.Label>Genre</Form.Label>\n\n                    <Form.Label\n                        className=\"me-sm-2\"\n                        htmlFor=\"inlineFormCustomSelect\"\n                        visuallyHidden\n                        >\n                        Select Genre\n                    </Form.Label>\n                    <Form.Control as =\"select\" name='genre' value={genreValue} onChange={e=> {\n                        setGenre(e.target.value);\n                        console.log(e.target.value);\n                    }}>\n                        <option value=\"fiction\">Fiction</option>\n                        <option value=\"non-fiction\">Non-Fiction</option>\n                        <option value=\"kids-teens\">Kids & Teen</option>\n                        <option value=\"adult\">Adult</option>\n                        <option value=\"school\">School</option>\n                    </Form.Control>\n                    <br></br>\n\n                </Form.Group>\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Description</Form.Label>\n                        <FloatingLabel controlId=\"floatingTextarea2\" label=\"Enter book synopsis, NO GREATER THAN 35 WORDS.\" style={{color:'grey'}}>\n                            <Form.Control id='description' name='description' value={fields.description} onChange={handleInputChange}\n                            as=\"textarea\"\n                            placeholder=\"Leave a comment here\"\n                            style={{ height: '100px' }}\n                            />\n                        </FloatingLabel>\n                </Form.Group>\n                \n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Image</Form.Label>\n                    <Form.Control placeholder=\"Image URL\" name='imgURL' value={fields.imgURL} onChange={handleInputChange}/>\n                </Form.Group>\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Price</Form.Label>\n                    <Form.Control placeholder=\"14.99\" name='price' value={fields.price} onChange={handleInputChange}/>\n                </Form.Group>\n            </Form>\n\n\n            </Container>\n\n            </div>\n            <div>\n                <Container>\n                    <Row>\n                    <div className='backSubmit'>\n                        <div className='buttonPadding'>\n                            <NavLink to='/management/books/'>\n                                <Button variant='danger'>\n                                    Back\n                                </Button>\n                            </NavLink>\n\n                        </div>\n                        <div className='buttonPadding'>\n                            <Button variant='success'onClick={submit}>\n                                Submit\n                            </Button>\n                        </div>\n                    </div>\n                    </Row>\n                </Container>\n            </div>\n        </div>\n    )\n}\n","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Homepage/Homepage.js",["146","147","148","149"],"import React, {useState, useEffect} from 'react'\n\nimport {Card, Row} from 'react-bootstrap'\nimport { Col, Container} from 'react-bootstrap'\nimport { HomepageList } from './HomepageList'\nimport { NavLink, useHistory} from 'react-router-dom'\n\nimport './Homepage.css'\nimport { useSessionUser } from '../../Hooks/useSessionUser'\n\n\nconst axios = require(\"axios\")\nexport const Homepage = () => {\n\n    const history = useHistory();\n    const {logoutSessionUser} = useSessionUser();\n    const[dataLoaded, setDataLoaded] = useState(false)\n    const [books, setBooks] = useState()\n\n    const populateData = async () => \n    {\n        try \n        {\n          const config = \n          {\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Origin': '*',\n            },\n            withCredential: true\n          }\n            const response = await axios.post(\"http://localhost:8081/api/books/populateData\", config);\n            const adminResponse = await axios.post(\"http://localhost:8080/api/users/makeAdminAccount\", config);\n            const responseGetData = await axios.get('http://localhost:8081/api/books/getallbooks');\n            return responseGetData.data;\n          \n        }   \n        catch(error)\n        {\n          console.log(error);\n        }\n    }\n    \n    useEffect(() => {\n        async function fetchData(){\n            if(dataLoaded === false){\n                const booksData = await populateData()\n                console.log(\"BOO\", booksData)\n                setBooks(booksData)\n                setDataLoaded(true)\n            }\n        }\n        fetchData()\n       \n    }, [dataLoaded])\n\n    const changeURL = (bookId) => {\n\n        history.push(\"/book/\"+ bookId)\n    }\n    \n    if (books)\n    {\n        const bookDisplay = books.map(book => {\n            return (\n    \n                <Col class='col-lg-6' md='auto'>\n                <div className = 'cards'>\n    \n                    <Card onClick={() => changeURL(book.id)} tag='a' style={{ width: '15rem', height:'22rem', maxHeight:'22rem', cursor:'pointer'}} >\n                    <Card.Img variant=\"top\" src={book.imgURL} style={{height:'100%'}} />\n                        {/* <div className='bookCardContent'>\n    \n                            <Card.Body>\n                                <Card.Title>\n                                <div className='bookCardTitle'>\n                                    {book.title}\n                                </div>\n                                </Card.Title>\n                                <Card.Text>\n                                    <div className='bookPrice'>\n                                        $N.A\n                                    </div>\n                                </Card.Text>\n                            </Card.Body>\n                        </div> */}\n    \n                    </Card>\n                    </div>\n    \n                </Col>\n    \n    \n            )\n        })\n    \n        return (\n            <div>\n                <div className='main-wrapper-home-page'>\n    \n                    <Container>\n                        <Row className='justify-content-md-center'>\n                        <Col md='auto'>\n                            <div className='sideBar'>\n                                 <HomepageList/>\n                            </div>\n                        </Col>\n    \n                        <Col>\n                            <Container>    \n                                <Row>  \n                                    {bookDisplay}\n                                </Row>\n                            </Container>\n                        </Col>\n                        </Row>\n                    </Container>\n    \n    \n                </div>\n            </div>   \n    \n        )\n    }\n\n    else\n    {\n        return (\n            <div>\n                    \n            </div>\n        )\n    }\n\n}\n","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Book/Book.js",["150","151","152","153","154"],"import React from 'react'\nimport { Container } from 'react-bootstrap'\nimport { useState, useEffect} from 'react';\nimport { NavLink, useParams } from 'react-router-dom';\nimport { Image } from 'react-bootstrap';\nimport { Row, Col, Button, Modal, Table} from 'react-bootstrap'\nimport './Book.css';\nimport { useSessionUser } from '../../Hooks/useSessionUser';\nimport { useHistory } from 'react-router';\nimport { BookListing } from './BookListing';\n\nconst axios = require('axios');\n\nexport const Book = () => {\n    // For error prompt\n    const [show, setShow] = useState(false);\n    const handleClose = () => setShow(false);\n    const handleCloseOk = () => {\n        setShow(false)\n        goToURL('/login');\n    }\n    const handleShow = () => setShow(true);\n\n    const history = useHistory();\n\n    const ColouredLine = ({color}) => (\n        <hr\n            style={{\n                color:color,\n                backgroundColor: color,\n                height: 2\n            }}\n        />\n    );\n\n    const {loggedIn} = useSessionUser();\n    const [book, setBook] = useState({id: 0});\n    const [dataLoaded, setLoadedData] = useState(false);\n    const [listings, setListings] = useState()\n    const [findLowest, setFindLowest] = useState(false);\n    const [displayPrice, setDisplayPrice] = useState(\"\");\n\n    let {bookID} = useParams();\n\n    const populateData = async (request) =>\n    {\n        try\n        {\n            const config = \n            {\n              headers: {\n                  Accept: 'application/json',\n                  'Content-Type': 'application/json',\n                  'Access-Control-Allow-Origin': '*',\n              },\n              withCredential: true\n            }\n\n            if (request === \"getBook\")\n            {\n                const bookRequest = {\n                    id:parseInt(bookID)\n                }\n    \n                console.log(\"Sending book request\")\n                const response = await axios.post(\"http://localhost:8081/api/books/getbook\", bookRequest, config);\n    \n                return response.data;\n            }\n\n            else if (request === \"getListings\")\n            {\n                const listingRequest = {\n                    bookId:parseInt(bookID)\n                }\n                    \n                console.log(\"Sending listings request\")\n                const response = await axios.post(\"http://localhost:8082/api/listings/getlistingsbybookid\", listingRequest, config);\n                console.log(\"Got listings\", response.data)\n                return response.data;\n            }\n\n        }  catch(error)\n        {\n            console.log(error)\n        }\n    }\n\n    useEffect(() => {\n        console.log(\"findlowest\", findLowest)\n        if (findLowest === false)\n        {\n            setLowestPrice();\n            setFindLowest(true)\n        }\n       \n    }, [book, findLowest])\n\n    useEffect(() => {\n        async function fetchData(){\n            if (dataLoaded === false) {\n                const bookData = await populateData(\"getBook\");\n                const listingsData = await populateData(\"getListings\");\n\n                setBook(bookData);\n                setLoadedData(true);\n                \n                if (!listingsData.results)\n                {\n                    setListings(listingsData);\n                    // setLowestPrice();\n                    // setListingsExist(true);\n                    console.log(\"What the dog doin?\")\n                    setFindLowest(false);\n\n                }\n            }\n        }\n        fetchData();\n\n    }, [dataLoaded, book, listings])\n\n\n    const goToURL = (url) =>\n    {\n        history.push(url);\n    }\n\n    // Helper function to obtain lowest listing price\n    function getLowestPrice(type) {\n        if (type === \"new\")\n        {\n            var lowestPrice = listings.new[0].price;\n            for (const listingPrice of listings.new)\n            {\n                if (listingPrice.price < lowestPrice)\n                {\n                    lowestPrice = listingPrice.price;\n                }\n            }\n        }\n        else if (type === \"used\")\n        {\n            var lowestPrice = listings.used[0].price;\n            for (const listingPrice of listings.used)\n            {\n                if (listingPrice.price < lowestPrice)\n                {\n                    lowestPrice = listingPrice.price;\n                }\n            }  \n        }\n        return lowestPrice;\n    }\n\n    // Finds lowest listing price \n    function setLowestPrice()\n    {\n        if (listings)\n        {\n\n            var temp = 0;\n\n            if (listings.new && listings.used)\n            {\n                var newBook = getLowestPrice(\"new\");\n                var usedBook = getLowestPrice(\"used\")\n                if (newBook < usedBook)\n                {\n                    setDisplayPrice(String(newBook));\n                }\n                else\n                {\n                    setDisplayPrice(String(usedBook));\n                }\n\n            }\n            \n            if (listings.new && !listings.used)\n            {\n                console.log(\"HI\")\n                temp = getLowestPrice(\"new\");\n                setDisplayPrice(String(temp));\n            }\n            if (listings.used && !listings.new)\n            {\n                temp = getLowestPrice(\"used\");\n                setDisplayPrice(String(temp))\n            }\n        }\n        \n    }\n    \n    if (book)\n    {\n\n        return (\n            <div>\n                <>\n                <Modal show={show} onHide={handleClose}>\n                    <Modal.Header closeButton>\n                    <Modal.Title>Not logged in!</Modal.Title>\n                    </Modal.Header>\n                    <Modal.Body>Please login to purchase or create a listing for a book.</Modal.Body>\n                    <Modal.Footer>\n                    <Button variant=\"secondary\" onClick={handleClose}>\n                        Close\n                    </Button>\n                    <Button variant=\"primary\" onClick={handleCloseOk}>\n                        Login\n                    </Button>\n                    </Modal.Footer>\n                </Modal>\n                </>\n                <Container>\n                    <Row>\n                        <div className='layout'>\n                            <div className='imageContainer'>\n                            <Image fluid src= {book.imgURL} style={{height:'22rem', width:'15rem'}}>\n                            </Image>\n                            </div>\n                            \n                            <div className='content'>\n                                <div className='title'>\n                                    {book.title}\n                                </div>\n\n                                <div className='author'>\n                                    By: {book.author}\n                                </div>\n\n                                <ColouredLine color='black'/>\n                                <span>\n                                    <strong>\n                                        ISBN: \n                                    </strong>\n                                </span>{' '}\n                                {book.isbn}\n                                <br/>\n                                \n                                    <strong>\n                                        Description: \n                                    </strong>\n                                <br/>\n                                {book.description}\n\n                            </div>  \n\n                            <div className='buyContainer'>\n                                <div className='price'>\n                                    {\n \n                                            listings\n                                            ?\n                                            (\n                                            <div className='createListing'>\n                                                <Container>\n                                                    Lowest price at...\n                                                    <div style={{fontSize:'40px'}}>\n                                                    ${displayPrice}\n                                                    </div>\n                                                        <Col class='col text-center'>\n                                                            <Button onClick = {()=> {\n                                                                if (!loggedIn)\n                                                                {\n                                                                    handleShow()\n                                                                }\n                                                            }}style={{fontSize:'30px', backgroundColor:'cadetblue', borderColor:'cadetblue', minWidth:'90%'}}variant=\"primary\">\n                                                                BUY NOW\n                                                            </Button>\n                                                        </Col>\n                                                </Container>\n                                            </div>\n                                            )\n                                            :\n                                            (\n                                            <div>\n                                                <div className='createListing'>\n\n                                                    No listings\n                                                    <div className='button'>\n\n                                                            <Button onClick={()=>{\n                                                                if (loggedIn)\n                                                                {\n                                                                    goToURL('/create-listing');\n                                                                }\n                                                                else\n                                                                {\n                                                                    handleShow()\n                                                                }\n                                                            }}style={{fontSize:'25px', backgroundColor:'cadetblue', borderColor:'cadetblue', minWidth:'70%'}}variant=\"primary\">\n                                                                Create Listing\n                                                            </Button>\n\n                                                    </div>\n                                                </div>\n                                            </div>\n\n                                            )\n                                    }\n\n                                </div>\n\n                            </div>\n\n                        </div>\n                    </Row>\n\n                    <div className='tableList'>\n                        <ColouredLine color='black'/>\n                            <Row>\n                                <BookListing bookID={bookID}></BookListing>\n                            </Row>\n                    </div>\n                </Container>\n                </div>\n\n        )\n    }\n    else\n    {\n        return (\n            <div>\n                <Container>\n                <h1>\n                    Book with ID '{bookID}' not found\n                </h1>\n                </Container>\n            </div>\n        )\n    }\n}\n","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/constants.js",[],"/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Homepage/HomepageList.js",[],"/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/Hooks/useForm.js",[],"/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/Hooks/useSessionUser.js",[],"/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/data/Data.js",[],"/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/CreateListing/CreateListing.js",["155","156","157"],"import React from 'react'\nimport { useState, useEffect} from 'react'\nimport { Col, Container, Row, Table, Button, FormLabel, Alert} from 'react-bootstrap'\nimport { NavLink } from 'react-router-dom'\nimport { Form } from 'react-bootstrap'\nimport axios from 'axios'\nimport { useSessionUser } from '../../Hooks/useSessionUser'\nimport \"./CreateListing.css\"\n\nexport const CreateListing = () => {\n\n    const[dataLoaded, setDataLoaded] = useState(false)\n    const [books, setBooks] = useState()\n    const {sessionUser} = useSessionUser();\n\n    const [selectedBook, setSelectedBook] = useState(1);\n    const [type, setSelectedType] = useState(\"\");\n    const [price, setPrice] = useState();\n\n    const [show, setShow] = useState(false);\n    const [message, setMessage] = useState({\n        success: false,\n        failure: false,\n        message: \"\"\n    })\n\n    const populateData = async () => \n    {\n        try \n        {\n            const responseGetData = await axios.get('http://localhost:8081/api/books/getallbooks');\n            return responseGetData.data;\n          \n        }   \n        catch(error)\n        {\n          console.log(error);\n        }\n    }\n    \n    useEffect(() => {\n        console.log(\"Session user\", sessionUser)\n        async function fetchData(){\n            if(dataLoaded === false){\n                const booksData = await populateData()\n                console.log(\"BOO\", booksData)\n                setBooks(booksData)\n                setDataLoaded(true)\n            }\n        }\n        fetchData()\n       \n    }, [dataLoaded])\n    \n    const submit = async () =>\n    {\n        console.log(\"HI\")\n\n        if (type === \"\")\n        {\n            setShow(true);\n            setMessage({\n                success:false,\n                failure:true,\n                message:\"Please select whether the condition of your book is new or used.\"\n            });\n\n            return;\n        }\n        else if (isNaN(price))\n        {\n            setShow(true);\n            setMessage({\n                success:false,\n                failure:true,\n                message:\"Incorrect 'price' field. Must be a number.\"\n            });\n            return;\n        }\n     \n            try\n            {\n                const config = {\n                    headers: {\n                        Accept: 'application/json',\n                        'Content-Type': 'application/json',\n                        'Access-Control-Allow-Origin': '*',\n                    },\n                    withCredential: true\n                }\n\n                const data = {\n                    seller: sessionUser.username,\n                    price: price,\n                    type: type,\n                    bookId:selectedBook\n                }\n\n                const response = await axios.post(\"http://localhost:8082/api/listings/addlisting\", data, config);\n\n                if (response.status === 201)\n                {\n                    setShow(true)\n                    setMessage({\n                        success:true,\n                        failure:false,\n                        message:\"Listing successfully created\"\n                    })\n                }\n\n                console.log(\"Listings response\", response.data)\n                return response.data;\n            }\n\n            catch(error)\n            {\n                setShow(true);\n                setMessage({\n                    success: false,\n                    failure: true,\n                    message: \"Bad response\"\n                });\n            }\n        \n    }\n    \n    if (books)\n    {\n        const booksList = books.map(book => {\n            return (\n                <option value = {book.id}>{book.title}</option>\n            )\n        })\n        return (\n            <div>\n                <div>\n                    <Container>\n                        {\n                            show === true && message.success\n                            ?\n                            <Alert variant='success' onClose={()=> setShow(false)} dismissible>\n                            <Alert.Heading> Success </Alert.Heading>\n                            <p>\n                                {message.message}\n                            </p>\n                            </Alert>\n                            :\n                            <></>\n                        }\n\n                        {\n                            show === true && message.failure\n                            ?\n                            <Alert variant='danger' onClose={()=> setShow(false)} dismissible>\n                            <Alert.Heading> Failure </Alert.Heading>\n                            <p>\n                                {message.message} \n                            </p>\n                            </Alert>\n                            :\n                            <></>\n                        }\n                        <Form>\n                        <Form.Group>\n                                <Form.Label as='legend'>Book</Form.Label>\n        \n                                <Form.Label\n                                    className=\"me-sm-2\"\n                                    htmlFor=\"inlineFormCustomSelect\"\n                                    visuallyHidden\n                                    >\n                                    Select Book\n                                </Form.Label>\n                                <Form.Control as =\"select\" name='book' value={selectedBook} onChange={e=> {\n                                    setSelectedBook(e.target.value);\n                                    console.log(e.target.value);\n                                }}>\n                                    {booksList}\n                                </Form.Control>\n                                <br></br>\n        \n                            </Form.Group>\n\n                            {/* <Form.Group className=\"mb-3\" controlId='formBasicCheckbox'>\n                                <Form.Label> Quality </Form.Label>\n                                <Form.Check type='checkbox' label='New'/>\n\n                            </Form.Group> */}\n\n                            <fieldset>\n                                <Form.Group as={Row} className=\"mb-3\">\n                                <Form.Label as=\"legend\">\n                                    Quality\n                                </Form.Label>\n                                <Col >\n                                    <Form.Check\n                                    type=\"radio\"\n                                    label=\"New\"\n                                    name=\"formHorizontalRadios\"\n                                    id=\"NewSelected\"\n                                    onClick={e => {setSelectedType(\"new\")}}\n                                    />\n                                    <Form.Check\n                                    type=\"radio\"\n                                    label=\"Used\"\n                                    name=\"formHorizontalRadios\"\n                                    id=\"OldSelected\"\n                                    onClick={e => {setSelectedType(\"used\")}}\n                                    />\n                                </Col>\n                                </Form.Group>\n                            </fieldset>\n\n\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label as='legend'>Price</Form.Label>\n                                <Form.Control placeholder=\"14.99\" name = 'title' value= {price} onChange={e=> {setPrice(e.target.value);}}/>\n                            </Form.Group>\n                        </Form>\n                    </Container>\n                </div>\n\n    \n                <div>\n                    <Container>\n                        <Row>\n                            <div className='backSubmit'>\n                                <div className='buttonPadding'>\n                                    <NavLink to='/my-listings'>\n                                        <Button variant='danger'>\n                                            Back\n                                        </Button>\n                                    </NavLink>\n\n                                </div>\n                                <div className='buttonPadding'>\n                                    <Button variant='success'onClick={submit}>\n                                        Submit\n                                    </Button>\n                                </div>\n                            </div>\n                        </Row>\n                    </Container>\n                </div>\n            </div>\n        )\n    }\n    else\n\n    {\n        return (\n            <div>\n\n            </div>\n        )\n    }\n    \n}\n","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/My-Listings/MyListings.js",["158"],"import React from 'react'\nimport { useState, useEffect} from 'react'\nimport { Col, Container, Row, Table, Button} from 'react-bootstrap'\nimport { NavLink } from 'react-router-dom'\nimport axios from 'axios'\nimport './MyListings.css'\nimport { useSessionUser } from '../../Hooks/useSessionUser'\n\nexport const MyListings = () => {\n    const {sessionUser} = useSessionUser();\n    const[dataLoaded,setDataLoaded] = useState(false);\n    const[listingsData, setListingsData] = useState(null);\n    const[bookData, setBookData] = useState(null);\n    const[completeData, setCompleteData] = useState([]);\n\n    const getListingsContents = async () =>\n    {\n        try\n        {\n            const config = \n            {\n              headers: {\n                  Accept: 'application/json',\n                  'Content-Type': 'application/json',\n                  'Access-Control-Allow-Origin': '*',\n              },\n\n            }\n\n            const sellerRequest = \n            {\n                seller:String(sessionUser.username)\n            }\n\n            console.log(\"CUNT\")\n            const response = await axios.post('http://localhost:8082/api/listings/getlistingsbyseller', sellerRequest, config);\n\n            console.log(\"Listings response\", response);\n\n            if (response.status === 200)\n            {\n                console.log(response.status)\n                return response.data;\n            }\n            else\n            {\n\n            }\n        }\n        catch (error)\n        {\n            console.log(error)\n        }\n    }\n\n    const getBookContents= async () =>\n    {\n        try\n        {\n            const response = await axios.get('http://localhost:8081/api/books/getallbooks');\n\n            return response.data;\n        }\n        catch (error)\n        {\n            console.log(error)\n        }\n    }\n\n    useEffect(()=>\n    {\n        async function fetchData() {\n            console.log(\"GOTCHA BITCH\", dataLoaded)\n            if (dataLoaded === false)\n            {\n                const listingsDataFetched = await getListingsContents();\n                const bookDataFetched = await getBookContents();\n                console.log(\"Listings fetched\", listingsDataFetched);\n                console.log(\"Books fetched\", bookDataFetched);\n\n                if (listingsDataFetched && bookDataFetched)\n                {\n                    if (!listingsDataFetched.results && !bookDataFetched.results)\n                    {\n                        let data = []\n                        console.log(\"AFFFAFF\", listingsDataFetched)\n                        // setListingsData(listingsDataFetched);\n                        // setBookData(bookDataFetched);\n                        for(const listing of listingsDataFetched){\n                            let listingItem = {\n                                id:listing.id,\n                                type:listing.type,\n                                price:listing.price,\n                                sold:listing.sold\n                                \n                            }\n                            for(const book of bookDataFetched){\n                                if(listing.bookId === book.id){\n                                    listingItem = {\n                                        ...listingItem, \n                                        bookId:book.id,\n                                        title:book.title,\n                                        author:book.author\n                                    }\n                                    data.push(listingItem)\n                                }\n                            }\n                        }\n\n                        console.log(\"Combined\", data);\n                        setCompleteData(data);  \n                        setDataLoaded(true);\n                    }   \n                }\n                else\n                {\n                    setListingsData();\n                    setBookData();\n                    setDataLoaded(true);\n                }\n            }\n        }\n        fetchData();\n\n    },  [listingsData, bookData, completeData, dataLoaded])\n\n    if(completeData)\n    {\n        console.log(\"listings data\", listingsData)\n        console.log(\"book data\", bookData)\n        const allData = completeData.map(listItem => {\n            return (\n                \n                <tr>\n                <td>{listItem.id}</td>\n                <td>{listItem.bookId}</td>\n                <td>{listItem.title}</td>\n                <td>{listItem.author}</td>\n                <td>{listItem.type}</td>\n                <td>{listItem.price}</td>\n                {\n                    listItem.sold\n                    ?\n                    (<div>\n                        Sold\n                    </div>)\n                    :\n                    (<div>\n                        Not sold\n                    </div>\n                    )\n                }\n                </tr>\n            )\n        })\n\n        return(\n            <div>\n            <Container>\n                <Row>\n                    <h1>\n                        My Listings\n                    </h1>\n                </Row>\n                <Row>\n                    <Col>\n                        <div className='addListing'>\n                            <NavLink to = \"/create-listing\">\n                            <Button variant ='success' style={{width:'100px'}}>\n                                Add\n                            </Button>\n                            </NavLink>\n                        </div>\n                    </Col>\n                </Row>\n            </Container>\n\n            <Container>\n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                        <th>Listing ID </th>\n                        <th>Book ID</th>\n                        <th>Title</th>\n                        <th>Author</th>\n                        <th>Type</th>\n                        <th>Price</th>\n                        <th>Status</th>\n\n             \n                        </tr>\n                    </thead>\n                    <tbody>\n                        {allData}\n                    </tbody>\n\n                </Table>\n                \n            </Container>\n        \n\n            </div>\n        )\n    }\n    else{\n        return (\n            <div>\n                <Container>\n                    <h1>\n                        My Listings\n                    </h1>\n                </Container>\n                <Container>\n\n                    <Row>\n                        <Col>\n                            <div className='addListing'>\n                                <NavLink to = \"/create-listing\">\n                                    <Button variant ='success' style={{width:'100px'}}>\n                                        Add\n                                    </Button>\n                                </NavLink>\n                            </div>\n                        </Col>\n                    </Row>\n                </Container>\n                <Container>\n                    <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                        <th>Listing ID </th>\n                        <th>Book ID</th>\n                        <th>Title</th>\n                        <th>Author</th>\n                        <th>Type</th>\n                        <th>Price</th>\n                        <th>Status</th>\n\n             \n                        </tr>\n                    </thead>\n                    <tbody>\n\n                    </tbody>\n\n                </Table>\n                </Container>\n            </div>\n    \n        )\n    }\n}\n","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Book/BookListing.js",["159","160"],"import React from 'react'\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { useParams } from 'react-router';\nimport { useEffect } from 'react';\nimport { Container, Table } from 'react-bootstrap';\nimport \"./BookListings.css\"\n\nexport const BookListing = ({bookID}) => {\n    const [tableDataUsed, setTableDataUsed] = useState([]);\n    const [tableDataNew, setTableDataNew] = useState([]);\n\n    const [book, setBook] = useState({id: 0});\n    const [dataLoaded, setDataLoaded] = useState(false);\n    const [listings, setListings] = useState();\n\n    const populateData = async (request) =>\n    {\n        try\n        {\n            const config = \n            {\n              headers: {\n                  Accept: 'application/json',\n                  'Content-Type': 'application/json',\n                  'Access-Control-Allow-Origin': '*',\n              },\n              withCredential: true\n            }\n\n            if (request === \"getBook\")\n            {\n                const bookRequest = {\n                    id:parseInt(bookID)\n                }\n    \n                console.log(\"Sending book request\")\n                const response = await axios.post(\"http://localhost:8081/api/books/getbook\", bookRequest, config);\n    \n                return response.data;\n            }\n\n            else if (request === \"getListings\")\n            {\n                const listingRequest = {\n                    bookId:parseInt(bookID)\n                }\n                    \n                console.log(\"Sending listings request\")\n                const response = await axios.post(\"http://localhost:8082/api/listings/getlistingsbybookid\", listingRequest, config);\n                console.log(\"Got listings\", response.data)\n                return response.data;\n            }\n\n        }  catch(error)\n        {\n            console.log(error)\n        }\n    }\n\n    useEffect(() => {\n        async function fetchData(){\n            if (dataLoaded === false) {\n                const bookData = await populateData(\"getBook\");\n                const listingsData = await populateData(\"getListings\");\n\n                if (listingsData && bookData)\n                {\n                    console.log(\"LISTINSGSOS\", listingsData)\n                    if (!listingsData.results && !bookData.results)\n                    {\n                        let dataNew = []\n                        let dataUsed = []\n\n                        if (listingsData.new)\n                        {\n                            for(const listing of listingsData.new){\n                                let listingItem = {\n                                    id:listing.id,\n                                    seller:listing.seller,\n                                    type:listing.type,\n                                    price:listing.price,\n                                    sold:listing.sold\n                                    \n                                }\n    \n                                if(listing.bookId === bookData.id){\n                                    listingItem = {\n                                        ...listingItem, \n                                        title:bookData.title,\n                                        author:bookData.author\n                                    }\n    \n                                    dataNew.push(listingItem)\n                                }\n    \n                            }\n                        }\n\n\n                        if (listingsData.used)\n                        {\n                            for(const listing of listingsData.used){\n                                let listingItem = {\n                                    id:listing.id,\n                                    seller:listing.seller,\n                                    type:listing.type,\n                                    price:listing.price,\n                                    sold:listing.sold\n                                    \n                                }\n    \n                                    if(listing.bookId === bookData.id){\n                                        listingItem = {\n                                            ...listingItem, \n                                            title:bookData.title,\n                                            author:bookData.author\n                                        }\n                                        dataUsed.push(listingItem)\n                                    }\n    \n                            }\n                        }\n\n\n                        console.log(\"asndjsabdad\", dataNew)\n\n                        setTableDataNew(dataNew); \n                        setTableDataUsed(dataUsed);  \n\n                        setDataLoaded(true)\n                    } \n                }\n                else\n                {\n                    setBook()\n                    setListings()\n                    setDataLoaded(true)\n                }\n            }\n        }\n        fetchData();\n\n    }, [dataLoaded, tableDataNew, tableDataUsed, listings, book])\n    if (tableDataUsed || tableDataNew)\n    {\n        const displayTableDataUsed = tableDataUsed.map(listItem => \n            {\n                return (\n                    \n                    <tr>\n                    <td>{listItem.id}</td>\n                    {/* <td>{listItem.title}</td> */}\n                    <td>{listItem.seller}</td>\n                    <td>{listItem.type}</td>\n                    <td>{listItem.price}</td>\n                    {\n                        listItem.sold\n                        ?\n                        (<div>\n                            Sold\n                        </div>)\n                        :\n                        (<div>\n                            Not sold\n                        </div>\n                        )\n                    }\n                    </tr>\n                )\n            }\n        )\n        const displayTableDataNew = tableDataNew.map(listItem => \n            {\n                return (\n                    \n                    <tr>\n                    <td>{listItem.id}</td>\n                    {/* <td>{listItem.title}</td> */}\n                    <td>{listItem.seller}</td>\n                    <td>{listItem.type}</td>\n                    <td>{listItem.price}</td>\n                    {\n                        listItem.sold\n                        ?\n                        (<div>\n                            Sold\n                        </div>)\n                        :\n                        (<div>\n                            Not sold\n                        </div>\n                        )\n                    }\n                    </tr>\n                )\n            })\n        \n        return (\n            <div>\n                <Container>\n                    <div className = 'tableList'>\n                        <h3>\n                            New Books for Sale\n                        </h3>\n                    <Table striped bordered hover>\n                        <thead>\n                            <tr>\n                            <th>Listing ID </th>\n                            {/* <th>Title</th> */}\n                            <th>Seller</th>\n                            <th>Type</th>\n                            <th>Price</th>\n                            <th>Status</th>\n\n                \n                            </tr>\n                        </thead>\n                        <tbody>\n                            {displayTableDataNew}\n                        </tbody>\n\n                    </Table>\n                    </div>\n                    <div className = 'tableList'>\n                        <h3>\n                            Used books for Sale\n                        </h3>\n                    <Table striped bordered hover>\n                        <thead>\n                            <tr>\n                            <th>Listing ID </th>\n                            {/* <th>Title</th> */}\n                            <th>Seller</th>\n                            <th>Type</th>\n                            <th>Price</th>\n                            <th>Status</th>\n\n                \n                            </tr>\n                        </thead>\n                        <tbody>\n                            {displayTableDataUsed}\n                        </tbody>\n\n                    </Table>\n                    </div>\n                </Container>\n            </div>\n        )\n    }\n    else\n    {\n        return (\n            <div>\n            <Container>\n                <div>\n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                        <th>Listing ID </th>\n                        {/* <th>Title</th> */}\n                        <th>Seller</th>\n                        <th>Type</th>\n                        <th>Price</th>\n                        <th>Status</th>\n\n            \n                        </tr>\n                    </thead>\n                    <tbody>\n\n                    </tbody>\n\n                </Table>\n                </div>\n                <div>\n                <Table striped bordered hover>\n                        <thead>\n                            <tr>\n                            <th>Listing ID </th>\n                            {/* <th>Title</th> */}\n                            <th>Seller</th>\n                            <th>Type</th>\n                            <th>Price</th>\n                            <th>Status</th>\n\n                \n                            </tr>\n                        </thead>\n                        <tbody>\n                            \n                        </tbody>\n\n                    </Table>\n                </div>\n            </Container>\n        </div>\n        )\n    }\n\n}\n\n","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Cart/Cart.js",[],"/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Footer/Footer.js",[],{"ruleId":"161","replacedBy":"162"},{"ruleId":"163","replacedBy":"164"},{"ruleId":"165","severity":1,"message":"166","line":3,"column":8,"nodeType":"167","messageId":"168","endLine":3,"endColumn":13},{"ruleId":"165","severity":1,"message":"169","line":3,"column":26,"nodeType":"167","messageId":"168","endLine":3,"endColumn":29},{"ruleId":"165","severity":1,"message":"170","line":2,"column":38,"nodeType":"167","messageId":"168","endLine":2,"endColumn":43},{"ruleId":"171","severity":1,"message":"172","line":46,"column":51,"nodeType":"173","messageId":"174","endLine":46,"endColumn":53},{"ruleId":"175","severity":1,"message":"176","line":57,"column":41,"nodeType":"177","endLine":57,"endColumn":156},{"ruleId":"165","severity":1,"message":"178","line":16,"column":12,"nodeType":"167","messageId":"168","endLine":16,"endColumn":20},{"ruleId":"165","severity":1,"message":"179","line":17,"column":20,"nodeType":"167","messageId":"168","endLine":17,"endColumn":29},{"ruleId":"165","severity":1,"message":"180","line":5,"column":10,"nodeType":"167","messageId":"168","endLine":5,"endColumn":17},{"ruleId":"165","severity":1,"message":"181","line":2,"column":46,"nodeType":"167","messageId":"168","endLine":2,"endColumn":50},{"ruleId":"165","severity":1,"message":"182","line":2,"column":52,"nodeType":"167","messageId":"168","endLine":2,"endColumn":57},{"ruleId":"165","severity":1,"message":"183","line":3,"column":10,"nodeType":"167","messageId":"168","endLine":3,"endColumn":16},{"ruleId":"165","severity":1,"message":"170","line":4,"column":10,"nodeType":"167","messageId":"168","endLine":4,"endColumn":15},{"ruleId":"165","severity":1,"message":"184","line":5,"column":10,"nodeType":"167","messageId":"168","endLine":5,"endColumn":14},{"ruleId":"185","severity":1,"message":"186","line":59,"column":8,"nodeType":"187","endLine":59,"endColumn":20,"suggestions":"188"},{"ruleId":"165","severity":1,"message":"181","line":2,"column":10,"nodeType":"167","messageId":"168","endLine":2,"endColumn":14},{"ruleId":"185","severity":1,"message":"186","line":96,"column":8,"nodeType":"187","endLine":96,"endColumn":21,"suggestions":"189"},{"ruleId":"165","severity":1,"message":"190","line":13,"column":11,"nodeType":"167","messageId":"168","endLine":13,"endColumn":18},{"ruleId":"165","severity":1,"message":"180","line":6,"column":10,"nodeType":"167","messageId":"168","endLine":6,"endColumn":17},{"ruleId":"165","severity":1,"message":"191","line":16,"column":12,"nodeType":"167","messageId":"168","endLine":16,"endColumn":29},{"ruleId":"165","severity":1,"message":"192","line":33,"column":19,"nodeType":"167","messageId":"168","endLine":33,"endColumn":27},{"ruleId":"165","severity":1,"message":"193","line":34,"column":19,"nodeType":"167","messageId":"168","endLine":34,"endColumn":32},{"ruleId":"165","severity":1,"message":"180","line":4,"column":10,"nodeType":"167","messageId":"168","endLine":4,"endColumn":17},{"ruleId":"165","severity":1,"message":"194","line":6,"column":35,"nodeType":"167","messageId":"168","endLine":6,"endColumn":40},{"ruleId":"185","severity":1,"message":"195","line":97,"column":8,"nodeType":"187","endLine":97,"endColumn":26,"suggestions":"196"},{"ruleId":"185","severity":1,"message":"186","line":121,"column":8,"nodeType":"187","endLine":121,"endColumn":36,"suggestions":"197"},{"ruleId":"198","severity":1,"message":"199","line":144,"column":17,"nodeType":"167","messageId":"200","endLine":144,"endColumn":28},{"ruleId":"165","severity":1,"message":"194","line":3,"column":31,"nodeType":"167","messageId":"168","endLine":3,"endColumn":36},{"ruleId":"165","severity":1,"message":"201","line":3,"column":46,"nodeType":"167","messageId":"168","endLine":3,"endColumn":55},{"ruleId":"185","severity":1,"message":"202","line":53,"column":8,"nodeType":"187","endLine":53,"endColumn":20,"suggestions":"203"},{"ruleId":"185","severity":1,"message":"204","line":125,"column":9,"nodeType":"187","endLine":125,"endColumn":59,"suggestions":"205"},{"ruleId":"165","severity":1,"message":"206","line":4,"column":10,"nodeType":"167","messageId":"168","endLine":4,"endColumn":19},{"ruleId":"185","severity":1,"message":"186","line":144,"column":8,"nodeType":"187","endLine":144,"endColumn":65,"suggestions":"207"},"no-native-reassign",["208"],"no-negated-in-lhs",["209"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'Nav' is defined but never used.","'Image' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'userType' is assigned a value but never used.","'setFields' is assigned a value but never used.","'NavLink' is defined but never used.","'Form' is defined but never used.","'Label' is defined but never used.","'Button' is defined but never used.","'data' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'populateData'. Either include it or remove the dependency array.","ArrayExpression",["210"],["211"],"'history' is assigned a value but never used.","'logoutSessionUser' is assigned a value but never used.","'response' is assigned a value but never used.","'adminResponse' is assigned a value but never used.","'Table' is defined but never used.","React Hook useEffect has a missing dependency: 'setLowestPrice'. Either include it or remove the dependency array.",["212"],["213"],"no-redeclare","'lowestPrice' is already defined.","redeclared","'FormLabel' is defined but never used.","React Hook useEffect has a missing dependency: 'sessionUser'. Either include it or remove the dependency array.",["214"],"React Hook useEffect has a missing dependency: 'getListingsContents'. Either include it or remove the dependency array.",["215"],"'useParams' is defined but never used.",["216"],"no-global-assign","no-unsafe-negation",{"desc":"217","fix":"218"},{"desc":"219","fix":"220"},{"desc":"221","fix":"222"},{"desc":"223","fix":"224"},{"desc":"225","fix":"226"},{"desc":"227","fix":"228"},{"desc":"229","fix":"230"},"Update the dependencies array to be: [genreParam, populateData]",{"range":"231","text":"232"},"Update the dependencies array to be: [populateData, searchInput]",{"range":"233","text":"234"},"Update the dependencies array to be: [book, findLowest, setLowestPrice]",{"range":"235","text":"236"},"Update the dependencies array to be: [dataLoaded, book, listings, populateData]",{"range":"237","text":"238"},"Update the dependencies array to be: [dataLoaded, sessionUser]",{"range":"239","text":"240"},"Update the dependencies array to be: [listingsData, bookData, completeData, dataLoaded, getListingsContents]",{"range":"241","text":"242"},"Update the dependencies array to be: [dataLoaded, tableDataNew, tableDataUsed, listings, book, populateData]",{"range":"243","text":"244"},[1660,1672],"[genreParam, populateData]",[2400,2413],"[populateData, searchInput]",[2841,2859],"[book, findLowest, setLowestPrice]",[3550,3578],"[dataLoaded, book, listings, populateData]",[1539,1551],"[dataLoaded, sessionUser]",[4070,4120],"[listingsData, bookData, completeData, dataLoaded, getListingsContents]",[4994,5051],"[dataLoaded, tableDataNew, tableDataUsed, listings, book, populateData]"]