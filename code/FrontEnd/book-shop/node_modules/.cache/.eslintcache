[{"/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/index.js":"1","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/App/App.js":"2","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Header/Header.js":"3","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Navbar/Navbar.js":"4","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Header2/Header2.js":"5","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Login/Login.js":"6","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Register/RegisterBusiness.js":"7","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Register/Register.js":"8","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Management/ManageBooks.js":"9","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Management/Management.js":"10","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/Context/SessionUserContext.js":"11","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Genre/Genre.js":"12","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Management/ManageUsers.js":"13","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Search/Search.js":"14","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Management/AddBooks.js":"15","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Homepage/Homepage.js":"16","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Book/Book.js":"17","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/constants.js":"18","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Homepage/HomepageList.js":"19","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/Hooks/useForm.js":"20","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/Hooks/useSessionUser.js":"21","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/data/Data.js":"22","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/CreateListing/CreateListing.js":"23","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/My-Listings/MyListings.js":"24","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Book/BookListing.js":"25"},{"size":234,"mtime":1630497487023,"results":"26","hashOfConfig":"27"},{"size":2222,"mtime":1633518447905,"results":"28","hashOfConfig":"27"},{"size":3437,"mtime":1633605914349,"results":"29","hashOfConfig":"27"},{"size":1861,"mtime":1633016449621,"results":"30","hashOfConfig":"27"},{"size":2113,"mtime":1633595246939,"results":"31","hashOfConfig":"27"},{"size":4598,"mtime":1631962766867,"results":"32","hashOfConfig":"27"},{"size":7580,"mtime":1631962766870,"results":"33","hashOfConfig":"27"},{"size":6936,"mtime":1631962766870,"results":"34","hashOfConfig":"27"},{"size":3609,"mtime":1633520554267,"results":"35","hashOfConfig":"27"},{"size":1995,"mtime":1631962766869,"results":"36","hashOfConfig":"27"},{"size":2253,"mtime":1633438235796,"results":"37","hashOfConfig":"27"},{"size":3800,"mtime":1633434799850,"results":"38","hashOfConfig":"27"},{"size":152,"mtime":1631962766868,"results":"39","hashOfConfig":"27"},{"size":4413,"mtime":1633595313677,"results":"40","hashOfConfig":"27"},{"size":8422,"mtime":1633574473919,"results":"41","hashOfConfig":"27"},{"size":3961,"mtime":1633572612127,"results":"42","hashOfConfig":"27"},{"size":11510,"mtime":1633600586969,"results":"43","hashOfConfig":"27"},{"size":81,"mtime":1631962766871,"results":"44","hashOfConfig":"27"},{"size":613,"mtime":1631962766866,"results":"45","hashOfConfig":"27"},{"size":317,"mtime":1630497487013,"results":"46","hashOfConfig":"27"},{"size":181,"mtime":1633016449618,"results":"47","hashOfConfig":"27"},{"size":984,"mtime":1630497487022,"results":"48","hashOfConfig":"27"},{"size":8753,"mtime":1633577825240,"results":"49","hashOfConfig":"27"},{"size":7689,"mtime":1633600194797,"results":"50","hashOfConfig":"27"},{"size":9417,"mtime":1633602508575,"results":"51","hashOfConfig":"27"},{"filePath":"52","messages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},"5rrci",{"filePath":"55","messages":"56","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"57","usedDeprecatedRules":"54"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"62","usedDeprecatedRules":"54"},{"filePath":"63","messages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"54"},{"filePath":"68","messages":"69","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"54"},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"73","messages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"54"},{"filePath":"76","messages":"77","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"54"},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"54"},{"filePath":"84","messages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"54"},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"91","usedDeprecatedRules":"54"},{"filePath":"92","messages":"93","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"94","usedDeprecatedRules":"54"},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"54"},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"109","usedDeprecatedRules":"54"},{"filePath":"110","messages":"111","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"112","messages":"113","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/index.js",[],["114","115"],"/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/App/App.js",["116"],"\nimport './App.css';\nimport axios from 'axios';\nimport {BrowserRouter as Router, Switch, Route} from 'react-router-dom';\nimport {Header} from '../Header/Header';\nimport {Homepage} from '../Homepage/Homepage';\nimport {Login} from '../Login/Login';\nimport {Register} from '../Register/Register';\nimport {NavigationBar} from '../Navbar/Navbar';\nimport { Header2 } from '../Header2/Header2';\nimport { Management } from '../Management/Management';\nimport { SessionUserProvider } from '../../Context/SessionUserContext';\nimport { ManageBooks } from '../Management/ManageBooks';\nimport { ManageUsers } from '../Management/ManageUsers';\nimport { AddBooks } from '../Management/AddBooks';\nimport { Book } from '../Book/Book';\nimport { RegisterBusiness } from '../Register/RegisterBusiness';\nimport { Genre } from '../Genre/Genre';\nimport { Search } from '../Search/Search';\nimport { MyListings } from '../My-Listings/MyListings';\nimport { CreateListing } from '../CreateListing/CreateListing';\n\n\n\nfunction App() \n{\n\n  return (\n    \n    <div>\n      <SessionUserProvider>\n        <Router>\n        <Header />\n        <Header2 />\n        <NavigationBar/>\n          <Switch>\n            <Route path=\"/login\" component={()=> <Login/>}/>\n            <Route path=\"/register/business\" component={()=> <RegisterBusiness/>}/>\n            <Route path=\"/register\" component={()=> <Register/>}/>\n            <Route path=\"/book/:bookID\" component={() => <Book/>}/>\n            <Route path=\"/genre/:genreParam\" component={() => <Genre/>}/>\n            <Route path=\"/search/:searchInput\" component={() => <Search/>}/>\n            <Route path=\"/management/books/add\" component={()=> <AddBooks/>}/>\n            <Route path=\"/management/books\" component={()=> <ManageBooks/>}/>\n            <Route path=\"/management/users\" component={()=> <ManageUsers/>}/>\n            <Route path=\"/management\" component={()=> <Management/>}/>\n            <Route path=\"/create-listing\" component={()=> <CreateListing/>}/>\n            <Route path=\"/my-listings\" component={()=> <MyListings/>}/>\n            <Route path=\"/\" component={()=> <Homepage/> }/>\n          </Switch>\n        </Router>\n      </SessionUserProvider>\n\n      \n    </div>\n  );\n}\n\nexport default App;\n","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Header/Header.js",[],"/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Navbar/Navbar.js",["117"],"\nimport React from 'react'\nimport { Col, Container, Nav, Row } from 'react-bootstrap'\nimport { NavLink } from 'react-router-dom'\n\nimport './Navbar.css';\n\n\nexport const NavigationBar = () => {\n\n    return (\n        <div className='categories'>\n            <br></br>\n            <Container>\n                <Row>\n                    <Col>\n                        <NavLink to=\"/genre/fiction\" style={{textDecoration:\"none\"}}>\n                            <div className = 'navItems' >\n                                Fiction\n                            </div>\n                            </NavLink>\n                    </Col>\n\n                    <Col>\n                        <NavLink to=\"/genre/non-fiction\" style={{textDecoration:\"none\"}}>\n                            <div className = 'navItems'> \n                                Non Fiction\n                            </div></NavLink>\n                    </Col>\n\n                    <Col>\n                        <NavLink to=\"/genre/kids-teens\" style={{textDecoration:\"none\"}}>\n                            <div className = 'navItems'>\n                                Kids & Teen\n                            </div>\n                            </NavLink>\n                    </Col>\n\n                    <Col>\n                        <NavLink to=\"/genre/adult\" style={{textDecoration:\"none\"}}>\n                            <div className='navItems'>\n                                Adult\n                            </div></NavLink>\n                    </Col>\n\n                    <Col>\n                        <NavLink to=\"/genre/school\" style={{textDecoration:\"none\"}}>\n                            <div className='navItems'>\n                                School\n                            </div></NavLink> \n                    </Col>\n                </Row>\n\n\n\n            </Container>\n\n        </div>\n    )\n}\n","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Header2/Header2.js",["118"],"/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Login/Login.js",["119","120"],"import axios from 'axios';\nimport React from 'react'\nimport { Container, Form, Button } from 'react-bootstrap'\nimport { useForm } from '../../Hooks/useForm'\nimport { useState } from 'react';\nimport { Alert } from 'react-bootstrap';\nimport { SESSION_USER } from '../constants';\nimport jwt_decode from 'jwt-decode';\nimport { useSessionUser } from '../../Hooks/useSessionUser';\nimport { useHistory } from 'react-router-dom';\n\nexport const Login = () => {\n\n    const history = useHistory();\n    const {loginSessionUser} = useSessionUser();\n    const {userType} = useSessionUser();\n    const {fields, setFields, handleInputChange} = useForm({});\n    const [show, setShow] = useState(false);\n    const [message, setMessage] = useState({\n        success: false,\n        failure: false,\n        message: \"\"\n    })\n\n    const submit = async (event) => {\n        event.preventDefault()\n\n\n        const data = {\n            username: String(fields.username),\n            password: String(fields.password)\n        }\n        console.log(data)\n\n\n\n        try {\n            const config = {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    'Access-Control-Allow-Origin': '*',\n                },\n                withCredential: true\n            }\n            const response = await axios.post('http://localhost:8080/api/users/login', data, config);\n            // console.log(response.data.token);\n\n            if (response.status === 200)\n            {\n                setShow(true);\n                setMessage({\n                    success:true,\n                    failure:false,\n                    message: \"Login Successful\"\n                });\n\n                const decoded = jwt_decode(response.data.token);\n\n                loginSessionUser(JSON.stringify(decoded));\n                loginSessionUser(decoded);\n\n                console.log(JSON.stringify(decoded));\n\n                localStorage.setItem(SESSION_USER, JSON.stringify(decoded));\n\n                console.log(JSON.parse(localStorage.getItem(SESSION_USER)));\n\n                setTimeout(() => {history.push(\"/\")}, 3000)\n            }\n        }\n\n        catch (error) {\n            console.log(error);\n            \n            setShow(true);\n            setMessage({\n                success:false,\n                failure:true,\n                message: \"Login Unsuccessful\"\n            });\n\n        }\n\n    }\n    return (\n        <div>\n            <Container>\n                {\n                    show === true && message.failure\n                    ?\n                    <Alert variant=\"danger\" onClose={() => setShow(false)} dismissible>\n                    <Alert.Heading>{message.message}</Alert.Heading>\n                    <p>\n                        Username or Password is incorrect.\n                    </p>\n                    </Alert>\n                    :\n                    <></>\n                }\n\n                {\n                    show === true && message.success\n                    ?\n                    <Alert variant=\"success\" onClose={() => setShow(false)} dismissible>\n                    <Alert.Heading>{message.message}</Alert.Heading>\n                    <p>\n                        You will be redirected shortly.\n                    </p>\n                    </Alert>\n                    :\n                    <></>\n                }\n            <Form>\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control type=\"email\" placeholder=\"admin@gmail.com\" name = 'username' value = {fields.username} onChange={handleInputChange}/>\n\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"password\" name='password' value={fields.password} onChange={handleInputChange}/>\n                    </Form.Group>\n                              \n                    <br></br>\n                    Admin account: \n                    <br></br>\n                    email: admin@gmail.com\n                    <br></br>\n                    password: password\n                    <br></br>\n                    <br></br>\n\n                    <Button variant=\"primary\" type=\"submit\" onClick={submit}>\n                        Login\n                    </Button>\n            </Form>\n            </Container>\n        </div>\n    )\n}\n","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Register/RegisterBusiness.js",["121"],"import React from 'react'\nimport { Form, Button, Container, Alert} from 'react-bootstrap'\nimport { useForm } from '../../Hooks/useForm'\nimport { useState } from 'react'\nimport { NavLink } from 'react-router-dom';\n\nconst axios = require('axios');\n\n\nexport const RegisterBusiness = () => {\n    const passwordLength = 6;\n    const phoneLength = 10;\n    const {fields, setFields, handleInputChange} = useForm({});\n    const [show, setShow] = useState(false);\n    const [message, setMessage] = useState({\n        success:false,  \n        failure:false,\n        message:\"\"\n    });\n\n    const submit =  async (event) => {\n        event.preventDefault()\n        if (fields.password !== fields.confirmPassword)\n        {\n            setShow(true);\n\n            setMessage({\n                success: false,\n                failure: true,\n                message: \"Passwords do not match!\"\n            })\n\n            return;\n        }\n\n        if ((fields.password.length < passwordLength) || (fields.confirmPassword.length < passwordLength))\n        {\n            setShow(true);\n\n            setMessage({\n                success: false,\n                failure: true,\n                message: \"Passwords is not long enough!\"\n            })\n\n            return;\n        }\n\n        if (fields.phone.length !== phoneLength || String(fields.phone).charAt(0) !== '0')\n        {\n            setShow(true);\n            setMessage({\n                success: false,\n                failure: true,\n                message: \"Phone number invalid\"\n            })\n\n            return;\n        }\n\n        const data = {\n            username: String(fields.username),\n            firstName: String(fields.firstName),\n            lastName: String(fields.lastName),\n            address: String(fields.address),\n            phone: String(fields.phone),\n            userType: \"business\",\n            abn: String(fields.abn),\n            businessName: String(fields.businessName),\n            password: String(fields.password),\n            confirmPassword: String(fields.confirmPassword)\n        }\n\n        try {\n            const config = {\n                headers: {\n                    Accept: 'application/json',\n                    'Content-Type': 'application/json',\n                    'Access-Control-Allow-Origin': '*',\n                },\n                withCredential: true\n            }\n\n            // Post URL form here\n            const response = await axios.post('http://localhost:8080/api/users/register', data, config);\n            if(response.status === 201){\n                setFields( {\n                    username: \"\",\n                    firstName: \"\",\n                    lastName: \"\",\n                    address: \"\",\n                    phone: \"\",\n                    abn: \"\",\n                    businessName: \"\",\n                    password: \"\",\n                    confirmPassword: \"\"\n                })\n\n                setShow(true);\n\n                setMessage({\n                    success: true,\n                    failure: false,\n                    message: \"Account creation success\"\n                });\n            }\n\n        }\n        catch (error) {\n            console.log(error)\n            setShow(true);\n            setMessage({\n                success: false,\n                failure: true,\n                message: \"Account creation failure\"\n            });\n        }\n\n\n\n    }\n        \n\n\n    return (\n        <div>\n            \n            <Container>\n                {\n                    show === true && message.failure\n                    ?\n                    <Alert variant=\"danger\" onClose={() => setShow(false)} dismissible>\n                    <Alert.Heading>{message.message}</Alert.Heading>\n                    <p>\n                    Fields are incorrect\n                    </p>\n                    </Alert>\n                    :\n                <></>\n                }\n\n                {\n                    show === true && message.success\n                    ?\n                    <Alert variant=\"success\" onClose={() => setShow(false)} dismissible>\n                    <Alert.Heading>{message.message}</Alert.Heading>\n                    <p>\n                    Account successfully created!\n                    </p>\n                    </Alert>\n                    :\n                <></>\n                }\n\n                <Form>\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicEmail\">\n                        <Form.Label>Email address</Form.Label>\n                        <Form.Control type=\"email\" placeholder=\"john.doe@gmail.com\" name = 'username' value = {fields.username} onChange={handleInputChange}/>\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"formFirstName\">\n                        <Form.Label>First name</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Hugh\" name = 'firstName' value = {fields.firstName} onChange= {handleInputChange}/>\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"formLastName\">\n                        <Form.Label>Last name</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Janus\" name = 'lastName' value = {fields.lastName} onChange= {handleInputChange}/>\n                    </Form.Group>\n                    <Form.Group className=\"mb-3\" controlId=\"formAddress\">\n                        <Form.Label>Address</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"2 Dickson Court\" name = 'address' value = {fields.address} onChange= {handleInputChange}/>\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"formPhone\">\n                        <Form.Label>Phone</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"0438262941\" name = 'phone' value = {fields.phone} onChange= {handleInputChange}/>\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"formABN\">\n                        <Form.Label>ABN</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"51824753556 (11 digit number)\" name = 'abn' value = {fields.abn} onChange= {handleInputChange}/>\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"formBusinessName\">\n                        <Form.Label>Business Name</Form.Label>\n                        <Form.Control type=\"text\" placeholder=\"Lars Janus' Books\" name = 'businessName' value = {fields.businessName} onChange= {handleInputChange}/>\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                        <Form.Label>Password</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Password\" name='password' value={fields.password} onChange={handleInputChange}/>\n                    </Form.Group>\n\n                    <Form.Group className=\"mb-3\" controlId=\"formBasicPassword\">\n                        <Form.Label>Confirm Password</Form.Label>\n                        <Form.Control type=\"password\" placeholder=\"Password\" name='confirmPassword' value={fields.confirmPassword} onChange={handleInputChange}/>\n                    </Form.Group>\n          \n                    <br></br>\n                    <Button variant=\"primary\" type=\"submit\" onClick={submit}>\n                        Submit\n                    </Button>\n                    <br></br>\n                </Form>\n            </Container>\n            \n        </div>\n    )\n}\n","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Register/Register.js",[],"/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Management/ManageBooks.js",["122","123"],"import React, {useState, useEffect} from 'react'\nimport { Button, Table, Container, Row, Col, Form, Label} from 'react-bootstrap'\nimport { NavLink } from 'react-router-dom';\nimport './ManageBooks.css';\nimport axios from 'axios';\n\n\nexport const ManageBooks = () => {\n    \n    const[dataLoaded,setDataLoaded] = useState(false);\n    const[data, setData] = useState();\n\n    const getTableContents = async () =>\n    {\n        try\n        {\n            const response = await axios.get('http://localhost:8081/api/books/getallbooks');\n\n            return response.data;\n        }\n        catch (error)\n        {\n\n        }\n    }\n\n    useEffect(()=>\n    {\n        async function fetchData() {\n            if (dataLoaded === false)\n            {\n                const booksData = await getTableContents();\n                console.log(booksData);\n                setData(booksData);\n                setDataLoaded(true);\n            }\n        }\n        fetchData();\n    }, [dataLoaded, data])\n\n\n    if(data){\n        const allBooksData = data.map(book => {\n            return (\n                \n                <tr>\n                <td>{book.id}</td>\n                <td>{book.title}</td>\n                <td>{book.author}</td>\n                {/* <td>\n                    ${book.price} */}\n                {/* <Form>\n                    <Form.Label\n                        className=\"me-sm-2\"\n                        htmlFor=\"inlineFormCustomSelect\"\n                        visuallyHidden\n                        >\n                        Pending\n                    </Form.Label>\n                    <Form.Select className=\"me-sm-2\" id=\"inlineFormCustomSelect\">\n                        <option value=\"0\">Pending</option>\n                        <option value=\"1\">Accepted</option>\n                        <option value=\"2\">Rejected</option>\n                    </Form.Select>\n                </Form> */}\n                {/* </td> */}\n        \n                </tr>\n            \n                \n            )\n        })\n        return(\n            <div>\n            <Container>\n                <Row>\n                    <Col>\n                        <div>\n                            <NavLink to = \"/management\">\n                                <Button variant='danger' style={{width:'100px', float:'left'}}>\n                                    Back\n                                </Button>\n                            </NavLink>\n                        </div>\n                    </Col>\n                    <Col>\n                        <div className='addBook'>\n                            <NavLink to = \"/management/books/add\">\n                                <Button variant ='success' style={{width:'100px'}}>\n                                    Add\n                                </Button>\n                            </NavLink>\n                        </div>\n                    </Col>\n                </Row>\n            </Container>\n\n            <Container>\n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                        <th>Book ID</th>\n                        <th>Title</th>\n                        <th>Author</th>\n                        {/* <th>Price</th> */}\n\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {allBooksData}\n                    </tbody>\n\n                </Table>\n                \n            </Container>\n        \n\n            </div>\n        )\n    }\n    else{\n        return (\n            <div>\n                \n            </div>\n    \n        )\n    }\n \n   \n}\n","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Management/Management.js",["124","125"],"import React from 'react'\nimport './Management.css';\nimport { Button, Row, Col, Container} from 'react-bootstrap'\nimport { Image } from 'react-bootstrap';\nimport { Card } from 'react-bootstrap';\nimport { useHistory } from 'react-router-dom';\n\nexport const Management = () => {\n    const history = useHistory();\n\n    const goToBookManagement = () => {\n        history.push(\"/management/books\");\n    };\n\n    const goToUserManagement = () => {\n        history.push(\"/management/users\");\n    };\n\n    return (\n        <div >\n            <Container>\n                <div className='paddingContainer'>\n                <Row>\n                    <Col>\n                        <div className='buttonCustom'>\n                            <Card tag='a' onClick={goToBookManagement} style={{cursor: 'pointer'}}>\n                            <Card.Img variant=\"top\" src=\"https://www.iconpacks.net/icons/2/free-opened-book-icon-3163-thumb.png\" />\n                            <Card.Body>\n                            <Card.Text className='text-center'>\n                                Manage Books\n                            </Card.Text>\n                            </Card.Body>\n                            </Card>\n                        </div>\n                    </Col>\n                    <Col>\n                        <div className='buttonCustom'>\n                            <Card tag='a' onClick={goToUserManagement} style={{cursor:'pointer'}}>\n                            <Card.Img variant=\"top\" src=\"https://upload.wikimedia.org/wikipedia/commons/9/99/Sample_User_Icon.png\" />\n\n                            <Card.Body>\n                            <Card.Text className='text-center'>\n                                Manage Users\n                            </Card.Text>\n                            </Card.Body>\n                            </Card>      \n                        </div>\n                    </Col>\n                </Row>\n                </div>\n\n            </Container>\n\n      </div>\n    )\n}\n","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/Context/SessionUserContext.js",[],"/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Genre/Genre.js",["126","127"],"import axios from 'axios'\nimport React from 'react'\nimport { useParams } from 'react-router'\nimport { useState } from 'react'\nimport { data } from '../../data/Data'\nimport { useEffect } from 'react'\nimport { Container } from 'react-bootstrap'\nimport { Card, Col, Row} from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\nimport '../Homepage/Homepage.css'\n\n\nexport const Genre = () => {\n\n    const history = useHistory();\n    const { genreParam } = useParams();\n    const [books, setBooks] = useState();\n\n\n    const populateData = async () =>\n    {\n        try\n        {\n            const config = \n            {\n              headers: {\n                  Accept: 'application/json',\n                  'Content-Type': 'application/json',\n                  'Access-Control-Allow-Origin': '*',\n              },\n              withCredential: true\n            }\n            const genreRequest = {\n                searchTerm:String(genreParam)\n            }\n            const responseGetData = await axios.post('http://localhost:8081/api/books/booksbygenre', genreRequest, config);\n            console.log(\"Get genre\", responseGetData)\n            return responseGetData.data;\n        }\n\n        catch (error)\n        {\n            console.log(error);\n        }\n    }\n\n    useEffect(() => {\n        console.log(\"use effect\")\n        async function fetchData() {\n            const bookData = await populateData();\n            // If there are actually books set it into book state\n            if(!bookData.results){\n                setBooks(bookData);\n            } else {\n                setBooks()\n            }\n        }\n        fetchData();\n    }, [genreParam])\n\n\n    const changeURL = (bookId) => {\n\n        history.push(\"/book/\"+ bookId)\n    }\n\n    if (books)\n    {\n        // if (books === (\"No results found for '\" + genreParam + \"'.\"))\n        // {\n        //     return (\n        //         <div>\n        //             <h1>\n        //                 No books found.\n        //             </h1>\n        //         </div>\n        //     )\n        // }\n        \n        // else\n        // {\n        const booksDisplay = books.map(book => {\n            return (\n                <Col md='auto'>\n                    <Card onClick={() => changeURL(book.id)} tag='a' style={{ width: '15rem', height:'22rem', maxHeight:'22rem', cursor:'pointer'}} >\n                        <Card.Img variant=\"top\" src={book.imgURL} style={{height:'100%'}} />\n                            {/* <div className='bookCardContent'>\n\n                                <Card.Body>\n                                    <Card.Title>\n                                    <div className='bookCardTitle'>\n                                        {book.title}\n                                    </div>\n                                    </Card.Title>\n                                    <Card.Text>\n                                        <div className='bookPrice'>\n                                            ${book.price}\n                                        </div>\n                                    </Card.Text>\n                                </Card.Body>\n                            </div> */}\n\n                        </Card>\n                </Col>\n            )\n        })\n    \n        return (\n            <div>\n                <Container>\n                    <div>\n                    <Row>\n                        {booksDisplay}\n                    </Row>\n                    </div>\n                </Container>\n            </div>\n        )\n        \n    }\n   \n    else\n    {\n        return (\n            <div>\n                <Container>\n                    <h1>\n                        No books for this category.\n                    </h1>\n                </Container>\n            </div>\n        )\n    }\n}\n","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Management/ManageUsers.js",["128"],"import React from 'react'\nimport { Form } from 'react-bootstrap'\n\nexport const ManageUsers = () => {\n    return (\n        <div>\n\n        </div>\n    )\n}\n","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Search/Search.js",["129"],"/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Management/AddBooks.js",["130"],"import React from 'react'\nimport { useForm } from '../../Hooks/useForm'\nimport { useState } from 'react';\nimport { Form, Container, Button, Alert, Row, FloatingLabel} from 'react-bootstrap'\nimport { useHistory, NavLink} from 'react-router-dom';\nimport './ManageBooks.css'\n// import './Management/ManageBooks.css'\n\nconst axios = require('axios');\n\nexport const AddBooks = () => {\n\n    const history = useHistory();\n    const maxWords = 35;\n\n    const {fields, setFields, handleInputChange} = useForm({});\n    const [genreValue, setGenre] = useState('Fiction');\n    const [show, setShow] = useState(false);\n    const [message, setMessage] = useState({\n        success:false,\n        failure:false,\n        message:\"\"\n    });\n\n    function isEmptyOrSpaces(str){\n        return str === null;\n    };\n\n    const submit = async (event) => {\n        if (isEmptyOrSpaces(fields.isbn) || isEmptyOrSpaces(fields.name) || isEmptyOrSpaces(fields.author) || isEmptyOrSpaces(fields.genre))\n        {\n            setShow(true);\n\n            setMessage({\n                    success:false,\n                    failure:true,\n                    message:\"Fields not filled in.\"\n                });\n            return;\n        }\n\n        \n\n        var calculateDescriptionLength = () =>\n        {\n            var string = document.getElementById('description').value;\n            var length = string.split(/[^\\s]+/).length - 1;\n            return length;\n        }\n\n        if (calculateDescriptionLength() > maxWords)\n        {\n            setShow(true);\n            \n            setMessage({\n                success:false,\n                failure:true,\n                message:\"Description too long!\"\n            })\n\n            return;\n        }\n        const data = {\n            isbn: String(fields.isbn),\n            title: String(fields.title),\n            author: String(fields.author),\n            genre: String(genreValue),\n            description: String(fields.description),\n            imgURL: String(fields.imgURL),\n            price: String(fields.price)\n        };\n\n        try {\n\n        \n            const config = \n                {\n                    headers: {\n                        Accept: 'application/json',\n                        'Content-Type': 'application/json',\n                        'Access-Control-Allow-Origin': '*',\n                    },\n                    withCredential: true\n                 };\n\n            const response = await axios.post(\"http://localhost:8081/api/books/addbook\", data, config);\n\n            if (response.status === 201)\n            {\n                console.log(response);\n                setFields({\n                    isbn:\"\",\n                    title:\"\",\n                    author:\"\",\n                    genre:\"\",\n                    description:\"\",\n                    imgURL:\"\",\n                    price:\"\"\n                })\n\n                setShow(true);\n\n                setMessage({\n                    success: true,\n                    failer: false,\n                    message: \"Book Creation Success\"\n                });\n            }\n        }\n\n        catch (error) {\n            console.log(error);\n            console.log(data);\n            setShow(true);\n            setMessage({\n                success: false,\n                failure: true,\n                message: \"Book Creation Failure\"\n            });\n        };\n    }\n    return (\n        <div>\n            <div>\n            <Container>\n                {\n                    show === true && message.failure\n                    ?\n                    <Alert variant=\"danger\" onClose={() => setShow(false)} dismissible>\n                    <Alert.Heading>{message.message}</Alert.Heading>\n                    <p>\n                    Fields are incorrect\n                    </p>\n                    </Alert>\n                    :\n                <></>\n                }\n\n                {\n                    show === true && message.success\n                    ?\n                    <Alert variant=\"success\" onClose={() => setShow(false)} dismissible>\n                    <Alert.Heading>{message.message}</Alert.Heading>\n                    <p>\n                    Book successfully created!\n                    </p>\n                    </Alert>\n                    :\n                <></>\n                }\n            <Form>\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Title</Form.Label>\n                    <Form.Control placeholder=\"The Hungry Caterpillar\" name = 'title' value={fields.title} onChange={handleInputChange}/>\n                </Form.Group>\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>ISBN</Form.Label>\n                    <Form.Control placeholder=\"1234567890\" name='isbn' value={fields.isbn} onChange={handleInputChange} />\n                </Form.Group>\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Author</Form.Label>\n                    <Form.Control placeholder=\"Hugh Janus\" name='author' value={fields.author} onChange={handleInputChange} />\n                </Form.Group>\n                {/* <Form.Group className=\"mb-3\">\n                    <Form.Label>Genre</Form.Label>\n                    <Form.Control placeholder=\"Comedy\" name='genre' value={fields.genre} onChange={handleInputChange}/>\n                </Form.Group> */}\n                <Form.Group>\n                    <Form.Label>Genre</Form.Label>\n\n                    <Form.Label\n                        className=\"me-sm-2\"\n                        htmlFor=\"inlineFormCustomSelect\"\n                        visuallyHidden\n                        >\n                        Select Genre\n                    </Form.Label>\n                    <Form.Control as =\"select\" name='genre' value={genreValue} onChange={e=> {\n                        setGenre(e.target.value);\n                        console.log(e.target.value);\n                    }}>\n                        <option value=\"fiction\">Fiction</option>\n                        <option value=\"non-fiction\">Non-Fiction</option>\n                        <option value=\"kids-teens\">Kids & Teen</option>\n                        <option value=\"adult\">Adult</option>\n                        <option value=\"school\">School</option>\n                    </Form.Control>\n                    <br></br>\n\n                </Form.Group>\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Description</Form.Label>\n                        <FloatingLabel controlId=\"floatingTextarea2\" label=\"Enter book synopsis, NO GREATER THAN 35 WORDS.\" style={{color:'grey'}}>\n                            <Form.Control id='description' name='description' value={fields.description} onChange={handleInputChange}\n                            as=\"textarea\"\n                            placeholder=\"Leave a comment here\"\n                            style={{ height: '100px' }}\n                            />\n                        </FloatingLabel>\n                </Form.Group>\n                \n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Image</Form.Label>\n                    <Form.Control placeholder=\"Image URL\" name='imgURL' value={fields.imgURL} onChange={handleInputChange}/>\n                </Form.Group>\n                <Form.Group className=\"mb-3\">\n                    <Form.Label>Price</Form.Label>\n                    <Form.Control placeholder=\"14.99\" name='price' value={fields.price} onChange={handleInputChange}/>\n                </Form.Group>\n            </Form>\n\n\n            </Container>\n\n            </div>\n            <div>\n                <Container>\n                    <Row>\n                    <div className='backSubmit'>\n                        <div className='buttonPadding'>\n                            <NavLink to='/management/books/'>\n                                <Button variant='danger'>\n                                    Back\n                                </Button>\n                            </NavLink>\n\n                        </div>\n                        <div className='buttonPadding'>\n                            <Button variant='success'onClick={submit}>\n                                Submit\n                            </Button>\n                        </div>\n                    </div>\n                    </Row>\n                </Container>\n            </div>\n        </div>\n    )\n}\n","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Homepage/Homepage.js",["131","132","133","134"],"import React, {useState, useEffect} from 'react'\n\nimport {Card, Row} from 'react-bootstrap'\nimport { Col, Container} from 'react-bootstrap'\nimport { HomepageList } from './HomepageList'\nimport { NavLink, useHistory} from 'react-router-dom'\n\nimport './Homepage.css'\nimport { useSessionUser } from '../../Hooks/useSessionUser'\n\n\nconst axios = require(\"axios\")\nexport const Homepage = () => {\n\n    const history = useHistory();\n    const {logoutSessionUser} = useSessionUser();\n    const[dataLoaded, setDataLoaded] = useState(false)\n    const [books, setBooks] = useState()\n\n    const populateData = async () => \n    {\n        try \n        {\n          const config = \n          {\n            headers: {\n                Accept: 'application/json',\n                'Content-Type': 'application/json',\n                'Access-Control-Allow-Origin': '*',\n            },\n            withCredential: true\n          }\n            const response = await axios.post(\"http://localhost:8081/api/books/populateData\", config);\n            const adminResponse = await axios.post(\"http://localhost:8080/api/users/makeAdminAccount\", config);\n            const responseGetData = await axios.get('http://localhost:8081/api/books/getallbooks');\n            return responseGetData.data;\n          \n        }   \n        catch(error)\n        {\n          console.log(error);\n        }\n    }\n    \n    useEffect(() => {\n        async function fetchData(){\n            if(dataLoaded === false){\n                const booksData = await populateData()\n                console.log(\"BOO\", booksData)\n                setBooks(booksData)\n                setDataLoaded(true)\n            }\n        }\n        fetchData()\n       \n    }, [dataLoaded])\n\n    const changeURL = (bookId) => {\n\n        history.push(\"/book/\"+ bookId)\n    }\n    \n    if (books)\n    {\n        const bookDisplay = books.map(book => {\n            return (\n    \n                <Col class='col-lg-6' md='auto'>\n                <div className = 'cards'>\n    \n                    <Card onClick={() => changeURL(book.id)} tag='a' style={{ width: '15rem', height:'22rem', maxHeight:'22rem', cursor:'pointer'}} >\n                    <Card.Img variant=\"top\" src={book.imgURL} style={{height:'100%'}} />\n                        {/* <div className='bookCardContent'>\n    \n                            <Card.Body>\n                                <Card.Title>\n                                <div className='bookCardTitle'>\n                                    {book.title}\n                                </div>\n                                </Card.Title>\n                                <Card.Text>\n                                    <div className='bookPrice'>\n                                        $N.A\n                                    </div>\n                                </Card.Text>\n                            </Card.Body>\n                        </div> */}\n    \n                    </Card>\n                    </div>\n    \n                </Col>\n    \n    \n            )\n        })\n    \n        return (\n            <div>\n                <div className='main-wrapper-home-page'>\n    \n                    <Container>\n                        <Row className='justify-content-md-center'>\n                        <Col md='auto'>\n                            <div className='sideBar'>\n                                 <HomepageList/>\n                            </div>\n                        </Col>\n    \n                        <Col>\n                            <Container>    \n                                <Row>  \n                                    {bookDisplay}\n                                </Row>\n                            </Container>\n                        </Col>\n                        </Row>\n                    </Container>\n    \n    \n                </div>\n            </div>   \n    \n        )\n    }\n\n    else\n    {\n        return (\n            <div>\n                    \n            </div>\n        )\n    }\n\n}\n","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Book/Book.js",["135","136","137","138","139"],"/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/constants.js",[],"/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Homepage/HomepageList.js",[],"/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/Hooks/useForm.js",[],"/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/Hooks/useSessionUser.js",[],"/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/data/Data.js",[],"/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/CreateListing/CreateListing.js",["140","141","142"],"import React from 'react'\nimport { useState, useEffect} from 'react'\nimport { Col, Container, Row, Table, Button, FormLabel, Alert} from 'react-bootstrap'\nimport { NavLink } from 'react-router-dom'\nimport { Form } from 'react-bootstrap'\nimport axios from 'axios'\nimport { useSessionUser } from '../../Hooks/useSessionUser'\nimport \"./CreateListing.css\"\n\nexport const CreateListing = () => {\n\n    const[dataLoaded, setDataLoaded] = useState(false)\n    const [books, setBooks] = useState()\n    const {sessionUser} = useSessionUser();\n\n    const [selectedBook, setSelectedBook] = useState(1);\n    const [type, setSelectedType] = useState(\"\");\n    const [price, setPrice] = useState();\n\n    const [show, setShow] = useState(false);\n    const [message, setMessage] = useState({\n        success: false,\n        failure: false,\n        message: \"\"\n    })\n\n    const populateData = async () => \n    {\n        try \n        {\n            const responseGetData = await axios.get('http://localhost:8081/api/books/getallbooks');\n            return responseGetData.data;\n          \n        }   \n        catch(error)\n        {\n          console.log(error);\n        }\n    }\n    \n    useEffect(() => {\n        console.log(\"Session user\", sessionUser)\n        async function fetchData(){\n            if(dataLoaded === false){\n                const booksData = await populateData()\n                console.log(\"BOO\", booksData)\n                setBooks(booksData)\n                setDataLoaded(true)\n            }\n        }\n        fetchData()\n       \n    }, [dataLoaded])\n    \n    const submit = async () =>\n    {\n        console.log(\"HI\")\n\n        if (type === \"\")\n        {\n            setShow(true);\n            setMessage({\n                success:false,\n                failure:true,\n                message:\"Please select whether the condition of your book is new or used.\"\n            });\n\n            return;\n        }\n        else if (isNaN(price))\n        {\n            setShow(true);\n            setMessage({\n                success:false,\n                failure:true,\n                message:\"Incorrect 'price' field. Must be a number.\"\n            });\n            return;\n        }\n     \n            try\n            {\n                const config = {\n                    headers: {\n                        Accept: 'application/json',\n                        'Content-Type': 'application/json',\n                        'Access-Control-Allow-Origin': '*',\n                    },\n                    withCredential: true\n                }\n\n                const data = {\n                    seller: sessionUser.username,\n                    price: price,\n                    type: type,\n                    bookId:selectedBook\n                }\n\n                const response = await axios.post(\"http://localhost:8082/api/listings/addlisting\", data, config);\n\n                if (response.status === 201)\n                {\n                    setShow(true)\n                    setMessage({\n                        success:true,\n                        failure:false,\n                        message:\"Listing successfully created\"\n                    })\n                }\n\n                console.log(\"Listings response\", response.data)\n                return response.data;\n            }\n\n            catch(error)\n            {\n                setShow(true);\n                setMessage({\n                    success: false,\n                    failure: true,\n                    message: \"Bad response\"\n                });\n            }\n        \n    }\n    \n    if (books)\n    {\n        const booksList = books.map(book => {\n            return (\n                <option value = {book.id}>{book.title}</option>\n            )\n        })\n        return (\n            <div>\n                <div>\n                    <Container>\n                        {\n                            show === true && message.success\n                            ?\n                            <Alert variant='success' onClose={()=> setShow(false)} dismissible>\n                            <Alert.Heading> Success </Alert.Heading>\n                            <p>\n                                {message.message}\n                            </p>\n                            </Alert>\n                            :\n                            <></>\n                        }\n\n                        {\n                            show === true && message.failure\n                            ?\n                            <Alert variant='danger' onClose={()=> setShow(false)} dismissible>\n                            <Alert.Heading> Failure </Alert.Heading>\n                            <p>\n                                {message.message} \n                            </p>\n                            </Alert>\n                            :\n                            <></>\n                        }\n                        <Form>\n                        <Form.Group>\n                                <Form.Label as='legend'>Book</Form.Label>\n        \n                                <Form.Label\n                                    className=\"me-sm-2\"\n                                    htmlFor=\"inlineFormCustomSelect\"\n                                    visuallyHidden\n                                    >\n                                    Select Book\n                                </Form.Label>\n                                <Form.Control as =\"select\" name='book' value={selectedBook} onChange={e=> {\n                                    setSelectedBook(e.target.value);\n                                    console.log(e.target.value);\n                                }}>\n                                    {booksList}\n                                </Form.Control>\n                                <br></br>\n        \n                            </Form.Group>\n\n                            {/* <Form.Group className=\"mb-3\" controlId='formBasicCheckbox'>\n                                <Form.Label> Quality </Form.Label>\n                                <Form.Check type='checkbox' label='New'/>\n\n                            </Form.Group> */}\n\n                            <fieldset>\n                                <Form.Group as={Row} className=\"mb-3\">\n                                <Form.Label as=\"legend\">\n                                    Quality\n                                </Form.Label>\n                                <Col >\n                                    <Form.Check\n                                    type=\"radio\"\n                                    label=\"New\"\n                                    name=\"formHorizontalRadios\"\n                                    id=\"NewSelected\"\n                                    onClick={e => {setSelectedType(\"new\")}}\n                                    />\n                                    <Form.Check\n                                    type=\"radio\"\n                                    label=\"Used\"\n                                    name=\"formHorizontalRadios\"\n                                    id=\"OldSelected\"\n                                    onClick={e => {setSelectedType(\"used\")}}\n                                    />\n                                </Col>\n                                </Form.Group>\n                            </fieldset>\n\n\n                            <Form.Group className=\"mb-3\">\n                                <Form.Label as='legend'>Price</Form.Label>\n                                <Form.Control placeholder=\"14.99\" name = 'title' value= {price} onChange={e=> {setPrice(e.target.value);}}/>\n                            </Form.Group>\n                        </Form>\n                    </Container>\n                </div>\n\n    \n                <div>\n                    <Container>\n                        <Row>\n                            <div className='backSubmit'>\n                                <div className='buttonPadding'>\n                                    <NavLink to='/my-listings'>\n                                        <Button variant='danger'>\n                                            Back\n                                        </Button>\n                                    </NavLink>\n\n                                </div>\n                                <div className='buttonPadding'>\n                                    <Button variant='success'onClick={submit}>\n                                        Submit\n                                    </Button>\n                                </div>\n                            </div>\n                        </Row>\n                    </Container>\n                </div>\n            </div>\n        )\n    }\n    else\n\n    {\n        return (\n            <div>\n\n            </div>\n        )\n    }\n    \n}\n","/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/My-Listings/MyListings.js",["143"],"/Users/hughphung/Documents/RMIT/2021/SEPT/SEPT-TEAM/SEPT-Team-6/code/FrontEnd/book-shop/src/components/Book/BookListing.js",["144","145"],{"ruleId":"146","replacedBy":"147"},{"ruleId":"148","replacedBy":"149"},{"ruleId":"150","severity":1,"message":"151","line":3,"column":8,"nodeType":"152","messageId":"153","endLine":3,"endColumn":13},{"ruleId":"150","severity":1,"message":"154","line":3,"column":26,"nodeType":"152","messageId":"153","endLine":3,"endColumn":29},{"ruleId":"155","severity":1,"message":"156","line":44,"column":51,"nodeType":"157","messageId":"158","endLine":44,"endColumn":53},{"ruleId":"150","severity":1,"message":"159","line":16,"column":12,"nodeType":"152","messageId":"153","endLine":16,"endColumn":20},{"ruleId":"150","severity":1,"message":"160","line":17,"column":20,"nodeType":"152","messageId":"153","endLine":17,"endColumn":29},{"ruleId":"150","severity":1,"message":"161","line":5,"column":10,"nodeType":"152","messageId":"153","endLine":5,"endColumn":17},{"ruleId":"150","severity":1,"message":"162","line":2,"column":46,"nodeType":"152","messageId":"153","endLine":2,"endColumn":50},{"ruleId":"150","severity":1,"message":"163","line":2,"column":52,"nodeType":"152","messageId":"153","endLine":2,"endColumn":57},{"ruleId":"150","severity":1,"message":"164","line":3,"column":10,"nodeType":"152","messageId":"153","endLine":3,"endColumn":16},{"ruleId":"150","severity":1,"message":"165","line":4,"column":10,"nodeType":"152","messageId":"153","endLine":4,"endColumn":15},{"ruleId":"150","severity":1,"message":"166","line":5,"column":10,"nodeType":"152","messageId":"153","endLine":5,"endColumn":14},{"ruleId":"167","severity":1,"message":"168","line":59,"column":8,"nodeType":"169","endLine":59,"endColumn":20,"suggestions":"170"},{"ruleId":"150","severity":1,"message":"162","line":2,"column":10,"nodeType":"152","messageId":"153","endLine":2,"endColumn":14},{"ruleId":"167","severity":1,"message":"168","line":96,"column":8,"nodeType":"169","endLine":96,"endColumn":21,"suggestions":"171"},{"ruleId":"150","severity":1,"message":"172","line":13,"column":11,"nodeType":"152","messageId":"153","endLine":13,"endColumn":18},{"ruleId":"150","severity":1,"message":"161","line":6,"column":10,"nodeType":"152","messageId":"153","endLine":6,"endColumn":17},{"ruleId":"150","severity":1,"message":"173","line":16,"column":12,"nodeType":"152","messageId":"153","endLine":16,"endColumn":29},{"ruleId":"150","severity":1,"message":"174","line":33,"column":19,"nodeType":"152","messageId":"153","endLine":33,"endColumn":27},{"ruleId":"150","severity":1,"message":"175","line":34,"column":19,"nodeType":"152","messageId":"153","endLine":34,"endColumn":32},{"ruleId":"150","severity":1,"message":"161","line":4,"column":10,"nodeType":"152","messageId":"153","endLine":4,"endColumn":17},{"ruleId":"150","severity":1,"message":"176","line":6,"column":35,"nodeType":"152","messageId":"153","endLine":6,"endColumn":40},{"ruleId":"167","severity":1,"message":"177","line":97,"column":8,"nodeType":"169","endLine":97,"endColumn":26,"suggestions":"178"},{"ruleId":"167","severity":1,"message":"168","line":121,"column":8,"nodeType":"169","endLine":121,"endColumn":36,"suggestions":"179"},{"ruleId":"180","severity":1,"message":"181","line":144,"column":17,"nodeType":"152","messageId":"182","endLine":144,"endColumn":28},{"ruleId":"150","severity":1,"message":"176","line":3,"column":31,"nodeType":"152","messageId":"153","endLine":3,"endColumn":36},{"ruleId":"150","severity":1,"message":"183","line":3,"column":46,"nodeType":"152","messageId":"153","endLine":3,"endColumn":55},{"ruleId":"167","severity":1,"message":"184","line":53,"column":8,"nodeType":"169","endLine":53,"endColumn":20,"suggestions":"185"},{"ruleId":"167","severity":1,"message":"186","line":125,"column":9,"nodeType":"169","endLine":125,"endColumn":59,"suggestions":"187"},{"ruleId":"150","severity":1,"message":"188","line":4,"column":10,"nodeType":"152","messageId":"153","endLine":4,"endColumn":19},{"ruleId":"167","severity":1,"message":"168","line":137,"column":8,"nodeType":"169","endLine":137,"endColumn":65,"suggestions":"189"},"no-native-reassign",["190"],"no-negated-in-lhs",["191"],"no-unused-vars","'axios' is defined but never used.","Identifier","unusedVar","'Nav' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","'userType' is assigned a value but never used.","'setFields' is assigned a value but never used.","'NavLink' is defined but never used.","'Form' is defined but never used.","'Label' is defined but never used.","'Button' is defined but never used.","'Image' is defined but never used.","'data' is defined but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'populateData'. Either include it or remove the dependency array.","ArrayExpression",["192"],["193"],"'history' is assigned a value but never used.","'logoutSessionUser' is assigned a value but never used.","'response' is assigned a value but never used.","'adminResponse' is assigned a value but never used.","'Table' is defined but never used.","React Hook useEffect has a missing dependency: 'setLowestPrice'. Either include it or remove the dependency array.",["194"],["195"],"no-redeclare","'lowestPrice' is already defined.","redeclared","'FormLabel' is defined but never used.","React Hook useEffect has a missing dependency: 'sessionUser'. Either include it or remove the dependency array.",["196"],"React Hook useEffect has a missing dependency: 'getListingsContents'. Either include it or remove the dependency array.",["197"],"'useParams' is defined but never used.",["198"],"no-global-assign","no-unsafe-negation",{"desc":"199","fix":"200"},{"desc":"201","fix":"202"},{"desc":"203","fix":"204"},{"desc":"205","fix":"206"},{"desc":"207","fix":"208"},{"desc":"209","fix":"210"},{"desc":"211","fix":"212"},"Update the dependencies array to be: [genreParam, populateData]",{"range":"213","text":"214"},"Update the dependencies array to be: [populateData, searchInput]",{"range":"215","text":"216"},"Update the dependencies array to be: [book, findLowest, setLowestPrice]",{"range":"217","text":"218"},"Update the dependencies array to be: [dataLoaded, book, listings, populateData]",{"range":"219","text":"220"},"Update the dependencies array to be: [dataLoaded, sessionUser]",{"range":"221","text":"222"},"Update the dependencies array to be: [listingsData, bookData, completeData, dataLoaded, getListingsContents]",{"range":"223","text":"224"},"Update the dependencies array to be: [dataLoaded, tableDataNew, tableDataUsed, listings, book, populateData]",{"range":"225","text":"226"},[1660,1672],"[genreParam, populateData]",[2400,2413],"[populateData, searchInput]",[2841,2859],"[book, findLowest, setLowestPrice]",[3550,3578],"[dataLoaded, book, listings, populateData]",[1539,1551],"[dataLoaded, sessionUser]",[4070,4120],"[listingsData, bookData, completeData, dataLoaded, getListingsContents]",[4632,4689],"[dataLoaded, tableDataNew, tableDataUsed, listings, book, populateData]"]